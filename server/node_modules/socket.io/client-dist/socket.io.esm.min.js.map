{"version":3,"file":"socket.io.esm.min.js","sources":["../node_modules/engine.io-parser/build/esm/commons.js","../node_modules/engine.io-parser/build/esm/encodePacket.browser.js","../node_modules/engine.io-parser/build/esm/contrib/base64-arraybuffer.js","../node_modules/engine.io-parser/build/esm/decodePacket.browser.js","../node_modules/engine.io-parser/build/esm/index.js","../node_modules/@socket.io/component-emitter/index.mjs","../node_modules/engine.io-client/build/esm/globalThis.browser.js","../node_modules/engine.io-client/build/esm/util.js","../node_modules/engine.io-client/build/esm/transport.js","../node_modules/engine.io-client/build/esm/contrib/parseqs.js","../node_modules/engine.io-client/build/esm/contrib/yeast.js","../node_modules/engine.io-client/build/esm/contrib/has-cors.js","../node_modules/engine.io-client/build/esm/transports/xmlhttprequest.browser.js","../node_modules/engine.io-client/build/esm/transports/polling.js","../node_modules/engine.io-client/build/esm/transports/websocket-constructor.browser.js","../node_modules/engine.io-client/build/esm/transports/websocket.js","../node_modules/engine.io-client/build/esm/transports/webtransport.js","../node_modules/engine.io-client/build/esm/transports/index.js","../node_modules/engine.io-client/build/esm/contrib/parseuri.js","../node_modules/engine.io-client/build/esm/socket.js","../node_modules/socket.io-parser/build/esm/is-binary.js","../node_modules/socket.io-parser/build/esm/binary.js","../node_modules/socket.io-parser/build/esm/index.js","../build/esm/on.js","../build/esm/socket.js","../build/esm/contrib/backo2.js","../build/esm/manager.js","../build/esm/index.js","../build/esm/url.js"],"sourcesContent":["const PACKET_TYPES = Object.create(null); // no Map = no polyfill\nPACKET_TYPES[\"open\"] = \"0\";\nPACKET_TYPES[\"close\"] = \"1\";\nPACKET_TYPES[\"ping\"] = \"2\";\nPACKET_TYPES[\"pong\"] = \"3\";\nPACKET_TYPES[\"message\"] = \"4\";\nPACKET_TYPES[\"upgrade\"] = \"5\";\nPACKET_TYPES[\"noop\"] = \"6\";\nconst PACKET_TYPES_REVERSE = Object.create(null);\nObject.keys(PACKET_TYPES).forEach(key => {\n    PACKET_TYPES_REVERSE[PACKET_TYPES[key]] = key;\n});\nconst ERROR_PACKET = { type: \"error\", data: \"parser error\" };\nexport { PACKET_TYPES, PACKET_TYPES_REVERSE, ERROR_PACKET };\n","import { PACKET_TYPES } from \"./commons.js\";\nconst withNativeBlob = typeof Blob === \"function\" ||\n    (typeof Blob !== \"undefined\" &&\n        Object.prototype.toString.call(Blob) === \"[object BlobConstructor]\");\nconst withNativeArrayBuffer = typeof ArrayBuffer === \"function\";\n// ArrayBuffer.isView method is not defined in IE10\nconst isView = obj => {\n    return typeof ArrayBuffer.isView === \"function\"\n        ? ArrayBuffer.isView(obj)\n        : obj && obj.buffer instanceof ArrayBuffer;\n};\nconst encodePacket = ({ type, data }, supportsBinary, callback) => {\n    if (withNativeBlob && data instanceof Blob) {\n        if (supportsBinary) {\n            return callback(data);\n        }\n        else {\n            return encodeBlobAsBase64(data, callback);\n        }\n    }\n    else if (withNativeArrayBuffer &&\n        (data instanceof ArrayBuffer || isView(data))) {\n        if (supportsBinary) {\n            return callback(data);\n        }\n        else {\n            return encodeBlobAsBase64(new Blob([data]), callback);\n        }\n    }\n    // plain string\n    return callback(PACKET_TYPES[type] + (data || \"\"));\n};\nconst encodeBlobAsBase64 = (data, callback) => {\n    const fileReader = new FileReader();\n    fileReader.onload = function () {\n        const content = fileReader.result.split(\",\")[1];\n        callback(\"b\" + (content || \"\"));\n    };\n    return fileReader.readAsDataURL(data);\n};\nfunction toArray(data) {\n    if (data instanceof Uint8Array) {\n        return data;\n    }\n    else if (data instanceof ArrayBuffer) {\n        return new Uint8Array(data);\n    }\n    else {\n        return new Uint8Array(data.buffer, data.byteOffset, data.byteLength);\n    }\n}\nlet TEXT_ENCODER;\nexport function encodePacketToBinary(packet, callback) {\n    if (withNativeBlob && packet.data instanceof Blob) {\n        return packet.data\n            .arrayBuffer()\n            .then(toArray)\n            .then(callback);\n    }\n    else if (withNativeArrayBuffer &&\n        (packet.data instanceof ArrayBuffer || isView(packet.data))) {\n        return callback(toArray(packet.data));\n    }\n    encodePacket(packet, false, encoded => {\n        if (!TEXT_ENCODER) {\n            TEXT_ENCODER = new TextEncoder();\n        }\n        callback(TEXT_ENCODER.encode(encoded));\n    });\n}\nexport { encodePacket };\n","// imported from https://github.com/socketio/base64-arraybuffer\nconst chars = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/';\n// Use a lookup table to find the index.\nconst lookup = typeof Uint8Array === 'undefined' ? [] : new Uint8Array(256);\nfor (let i = 0; i < chars.length; i++) {\n    lookup[chars.charCodeAt(i)] = i;\n}\nexport const encode = (arraybuffer) => {\n    let bytes = new Uint8Array(arraybuffer), i, len = bytes.length, base64 = '';\n    for (i = 0; i < len; i += 3) {\n        base64 += chars[bytes[i] >> 2];\n        base64 += chars[((bytes[i] & 3) << 4) | (bytes[i + 1] >> 4)];\n        base64 += chars[((bytes[i + 1] & 15) << 2) | (bytes[i + 2] >> 6)];\n        base64 += chars[bytes[i + 2] & 63];\n    }\n    if (len % 3 === 2) {\n        base64 = base64.substring(0, base64.length - 1) + '=';\n    }\n    else if (len % 3 === 1) {\n        base64 = base64.substring(0, base64.length - 2) + '==';\n    }\n    return base64;\n};\nexport const decode = (base64) => {\n    let bufferLength = base64.length * 0.75, len = base64.length, i, p = 0, encoded1, encoded2, encoded3, encoded4;\n    if (base64[base64.length - 1] === '=') {\n        bufferLength--;\n        if (base64[base64.length - 2] === '=') {\n            bufferLength--;\n        }\n    }\n    const arraybuffer = new ArrayBuffer(bufferLength), bytes = new Uint8Array(arraybuffer);\n    for (i = 0; i < len; i += 4) {\n        encoded1 = lookup[base64.charCodeAt(i)];\n        encoded2 = lookup[base64.charCodeAt(i + 1)];\n        encoded3 = lookup[base64.charCodeAt(i + 2)];\n        encoded4 = lookup[base64.charCodeAt(i + 3)];\n        bytes[p++] = (encoded1 << 2) | (encoded2 >> 4);\n        bytes[p++] = ((encoded2 & 15) << 4) | (encoded3 >> 2);\n        bytes[p++] = ((encoded3 & 3) << 6) | (encoded4 & 63);\n    }\n    return arraybuffer;\n};\n","import { ERROR_PACKET, PACKET_TYPES_REVERSE } from \"./commons.js\";\nimport { decode } from \"./contrib/base64-arraybuffer.js\";\nconst withNativeArrayBuffer = typeof ArrayBuffer === \"function\";\nexport const decodePacket = (encodedPacket, binaryType) => {\n    if (typeof encodedPacket !== \"string\") {\n        return {\n            type: \"message\",\n            data: mapBinary(encodedPacket, binaryType)\n        };\n    }\n    const type = encodedPacket.charAt(0);\n    if (type === \"b\") {\n        return {\n            type: \"message\",\n            data: decodeBase64Packet(encodedPacket.substring(1), binaryType)\n        };\n    }\n    const packetType = PACKET_TYPES_REVERSE[type];\n    if (!packetType) {\n        return ERROR_PACKET;\n    }\n    return encodedPacket.length > 1\n        ? {\n            type: PACKET_TYPES_REVERSE[type],\n            data: encodedPacket.substring(1)\n        }\n        : {\n            type: PACKET_TYPES_REVERSE[type]\n        };\n};\nconst decodeBase64Packet = (data, binaryType) => {\n    if (withNativeArrayBuffer) {\n        const decoded = decode(data);\n        return mapBinary(decoded, binaryType);\n    }\n    else {\n        return { base64: true, data }; // fallback for old browsers\n    }\n};\nconst mapBinary = (data, binaryType) => {\n    switch (binaryType) {\n        case \"blob\":\n            if (data instanceof Blob) {\n                // from WebSocket + binaryType \"blob\"\n                return data;\n            }\n            else {\n                // from HTTP long-polling or WebTransport\n                return new Blob([data]);\n            }\n        case \"arraybuffer\":\n        default:\n            if (data instanceof ArrayBuffer) {\n                // from HTTP long-polling (base64) or WebSocket + binaryType \"arraybuffer\"\n                return data;\n            }\n            else {\n                // from WebTransport (Uint8Array)\n                return data.buffer;\n            }\n    }\n};\n","import { encodePacket, encodePacketToBinary } from \"./encodePacket.js\";\nimport { decodePacket } from \"./decodePacket.js\";\nconst SEPARATOR = String.fromCharCode(30); // see https://en.wikipedia.org/wiki/Delimiter#ASCII_delimited_text\nconst encodePayload = (packets, callback) => {\n    // some packets may be added to the array while encoding, so the initial length must be saved\n    const length = packets.length;\n    const encodedPackets = new Array(length);\n    let count = 0;\n    packets.forEach((packet, i) => {\n        // force base64 encoding for binary packets\n        encodePacket(packet, false, encodedPacket => {\n            encodedPackets[i] = encodedPacket;\n            if (++count === length) {\n                callback(encodedPackets.join(SEPARATOR));\n            }\n        });\n    });\n};\nconst decodePayload = (encodedPayload, binaryType) => {\n    const encodedPackets = encodedPayload.split(SEPARATOR);\n    const packets = [];\n    for (let i = 0; i < encodedPackets.length; i++) {\n        const decodedPacket = decodePacket(encodedPackets[i], binaryType);\n        packets.push(decodedPacket);\n        if (decodedPacket.type === \"error\") {\n            break;\n        }\n    }\n    return packets;\n};\nlet TEXT_DECODER;\nexport function decodePacketFromBinary(data, isBinary, binaryType) {\n    if (!TEXT_DECODER) {\n        // lazily created for compatibility with old browser platforms\n        TEXT_DECODER = new TextDecoder();\n    }\n    // 48 === \"0\".charCodeAt(0) (OPEN packet type)\n    // 54 === \"6\".charCodeAt(0) (NOOP packet type)\n    const isPlainBinary = isBinary || data[0] < 48 || data[0] > 54;\n    return decodePacket(isPlainBinary ? data : TEXT_DECODER.decode(data), binaryType);\n}\nexport const protocol = 4;\nexport { encodePacket, encodePacketToBinary, encodePayload, decodePacket, decodePayload };\n","/**\n * Initialize a new `Emitter`.\n *\n * @api public\n */\n\nexport function Emitter(obj) {\n  if (obj) return mixin(obj);\n}\n\n/**\n * Mixin the emitter properties.\n *\n * @param {Object} obj\n * @return {Object}\n * @api private\n */\n\nfunction mixin(obj) {\n  for (var key in Emitter.prototype) {\n    obj[key] = Emitter.prototype[key];\n  }\n  return obj;\n}\n\n/**\n * Listen on the given `event` with `fn`.\n *\n * @param {String} event\n * @param {Function} fn\n * @return {Emitter}\n * @api public\n */\n\nEmitter.prototype.on =\nEmitter.prototype.addEventListener = function(event, fn){\n  this._callbacks = this._callbacks || {};\n  (this._callbacks['$' + event] = this._callbacks['$' + event] || [])\n    .push(fn);\n  return this;\n};\n\n/**\n * Adds an `event` listener that will be invoked a single\n * time then automatically removed.\n *\n * @param {String} event\n * @param {Function} fn\n * @return {Emitter}\n * @api public\n */\n\nEmitter.prototype.once = function(event, fn){\n  function on() {\n    this.off(event, on);\n    fn.apply(this, arguments);\n  }\n\n  on.fn = fn;\n  this.on(event, on);\n  return this;\n};\n\n/**\n * Remove the given callback for `event` or all\n * registered callbacks.\n *\n * @param {String} event\n * @param {Function} fn\n * @return {Emitter}\n * @api public\n */\n\nEmitter.prototype.off =\nEmitter.prototype.removeListener =\nEmitter.prototype.removeAllListeners =\nEmitter.prototype.removeEventListener = function(event, fn){\n  this._callbacks = this._callbacks || {};\n\n  // all\n  if (0 == arguments.length) {\n    this._callbacks = {};\n    return this;\n  }\n\n  // specific event\n  var callbacks = this._callbacks['$' + event];\n  if (!callbacks) return this;\n\n  // remove all handlers\n  if (1 == arguments.length) {\n    delete this._callbacks['$' + event];\n    return this;\n  }\n\n  // remove specific handler\n  var cb;\n  for (var i = 0; i < callbacks.length; i++) {\n    cb = callbacks[i];\n    if (cb === fn || cb.fn === fn) {\n      callbacks.splice(i, 1);\n      break;\n    }\n  }\n\n  // Remove event specific arrays for event types that no\n  // one is subscribed for to avoid memory leak.\n  if (callbacks.length === 0) {\n    delete this._callbacks['$' + event];\n  }\n\n  return this;\n};\n\n/**\n * Emit `event` with the given args.\n *\n * @param {String} event\n * @param {Mixed} ...\n * @return {Emitter}\n */\n\nEmitter.prototype.emit = function(event){\n  this._callbacks = this._callbacks || {};\n\n  var args = new Array(arguments.length - 1)\n    , callbacks = this._callbacks['$' + event];\n\n  for (var i = 1; i < arguments.length; i++) {\n    args[i - 1] = arguments[i];\n  }\n\n  if (callbacks) {\n    callbacks = callbacks.slice(0);\n    for (var i = 0, len = callbacks.length; i < len; ++i) {\n      callbacks[i].apply(this, args);\n    }\n  }\n\n  return this;\n};\n\n// alias used for reserved events (protected method)\nEmitter.prototype.emitReserved = Emitter.prototype.emit;\n\n/**\n * Return array of callbacks for `event`.\n *\n * @param {String} event\n * @return {Array}\n * @api public\n */\n\nEmitter.prototype.listeners = function(event){\n  this._callbacks = this._callbacks || {};\n  return this._callbacks['$' + event] || [];\n};\n\n/**\n * Check if this emitter has `event` handlers.\n *\n * @param {String} event\n * @return {Boolean}\n * @api public\n */\n\nEmitter.prototype.hasListeners = function(event){\n  return !! this.listeners(event).length;\n};\n","export const globalThisShim = (() => {\n    if (typeof self !== \"undefined\") {\n        return self;\n    }\n    else if (typeof window !== \"undefined\") {\n        return window;\n    }\n    else {\n        return Function(\"return this\")();\n    }\n})();\n","import { globalThisShim as globalThis } from \"./globalThis.js\";\nexport function pick(obj, ...attr) {\n    return attr.reduce((acc, k) => {\n        if (obj.hasOwnProperty(k)) {\n            acc[k] = obj[k];\n        }\n        return acc;\n    }, {});\n}\n// Keep a reference to the real timeout functions so they can be used when overridden\nconst NATIVE_SET_TIMEOUT = globalThis.setTimeout;\nconst NATIVE_CLEAR_TIMEOUT = globalThis.clearTimeout;\nexport function installTimerFunctions(obj, opts) {\n    if (opts.useNativeTimers) {\n        obj.setTimeoutFn = NATIVE_SET_TIMEOUT.bind(globalThis);\n        obj.clearTimeoutFn = NATIVE_CLEAR_TIMEOUT.bind(globalThis);\n    }\n    else {\n        obj.setTimeoutFn = globalThis.setTimeout.bind(globalThis);\n        obj.clearTimeoutFn = globalThis.clearTimeout.bind(globalThis);\n    }\n}\n// base64 encoded buffers are about 33% bigger (https://en.wikipedia.org/wiki/Base64)\nconst BASE64_OVERHEAD = 1.33;\n// we could also have used `new Blob([obj]).size`, but it isn't supported in IE9\nexport function byteLength(obj) {\n    if (typeof obj === \"string\") {\n        return utf8Length(obj);\n    }\n    // arraybuffer or blob\n    return Math.ceil((obj.byteLength || obj.size) * BASE64_OVERHEAD);\n}\nfunction utf8Length(str) {\n    let c = 0, length = 0;\n    for (let i = 0, l = str.length; i < l; i++) {\n        c = str.charCodeAt(i);\n        if (c < 0x80) {\n            length += 1;\n        }\n        else if (c < 0x800) {\n            length += 2;\n        }\n        else if (c < 0xd800 || c >= 0xe000) {\n            length += 3;\n        }\n        else {\n            i++;\n            length += 4;\n        }\n    }\n    return length;\n}\n","import { decodePacket } from \"engine.io-parser\";\nimport { Emitter } from \"@socket.io/component-emitter\";\nimport { installTimerFunctions } from \"./util.js\";\nimport { encode } from \"./contrib/parseqs.js\";\nclass TransportError extends Error {\n    constructor(reason, description, context) {\n        super(reason);\n        this.description = description;\n        this.context = context;\n        this.type = \"TransportError\";\n    }\n}\nexport class Transport extends Emitter {\n    /**\n     * Transport abstract constructor.\n     *\n     * @param {Object} opts - options\n     * @protected\n     */\n    constructor(opts) {\n        super();\n        this.writable = false;\n        installTimerFunctions(this, opts);\n        this.opts = opts;\n        this.query = opts.query;\n        this.socket = opts.socket;\n    }\n    /**\n     * Emits an error.\n     *\n     * @param {String} reason\n     * @param description\n     * @param context - the error context\n     * @return {Transport} for chaining\n     * @protected\n     */\n    onError(reason, description, context) {\n        super.emitReserved(\"error\", new TransportError(reason, description, context));\n        return this;\n    }\n    /**\n     * Opens the transport.\n     */\n    open() {\n        this.readyState = \"opening\";\n        this.doOpen();\n        return this;\n    }\n    /**\n     * Closes the transport.\n     */\n    close() {\n        if (this.readyState === \"opening\" || this.readyState === \"open\") {\n            this.doClose();\n            this.onClose();\n        }\n        return this;\n    }\n    /**\n     * Sends multiple packets.\n     *\n     * @param {Array} packets\n     */\n    send(packets) {\n        if (this.readyState === \"open\") {\n            this.write(packets);\n        }\n        else {\n            // this might happen if the transport was silently closed in the beforeunload event handler\n        }\n    }\n    /**\n     * Called upon open\n     *\n     * @protected\n     */\n    onOpen() {\n        this.readyState = \"open\";\n        this.writable = true;\n        super.emitReserved(\"open\");\n    }\n    /**\n     * Called with data.\n     *\n     * @param {String} data\n     * @protected\n     */\n    onData(data) {\n        const packet = decodePacket(data, this.socket.binaryType);\n        this.onPacket(packet);\n    }\n    /**\n     * Called with a decoded packet.\n     *\n     * @protected\n     */\n    onPacket(packet) {\n        super.emitReserved(\"packet\", packet);\n    }\n    /**\n     * Called upon close.\n     *\n     * @protected\n     */\n    onClose(details) {\n        this.readyState = \"closed\";\n        super.emitReserved(\"close\", details);\n    }\n    /**\n     * Pauses the transport, in order not to lose packets during an upgrade.\n     *\n     * @param onPause\n     */\n    pause(onPause) { }\n    createUri(schema, query = {}) {\n        return (schema +\n            \"://\" +\n            this._hostname() +\n            this._port() +\n            this.opts.path +\n            this._query(query));\n    }\n    _hostname() {\n        const hostname = this.opts.hostname;\n        return hostname.indexOf(\":\") === -1 ? hostname : \"[\" + hostname + \"]\";\n    }\n    _port() {\n        if (this.opts.port &&\n            ((this.opts.secure && Number(this.opts.port !== 443)) ||\n                (!this.opts.secure && Number(this.opts.port) !== 80))) {\n            return \":\" + this.opts.port;\n        }\n        else {\n            return \"\";\n        }\n    }\n    _query(query) {\n        const encodedQuery = encode(query);\n        return encodedQuery.length ? \"?\" + encodedQuery : \"\";\n    }\n}\n","// imported from https://github.com/galkn/querystring\n/**\n * Compiles a querystring\n * Returns string representation of the object\n *\n * @param {Object}\n * @api private\n */\nexport function encode(obj) {\n    let str = '';\n    for (let i in obj) {\n        if (obj.hasOwnProperty(i)) {\n            if (str.length)\n                str += '&';\n            str += encodeURIComponent(i) + '=' + encodeURIComponent(obj[i]);\n        }\n    }\n    return str;\n}\n/**\n * Parses a simple querystring into an object\n *\n * @param {String} qs\n * @api private\n */\nexport function decode(qs) {\n    let qry = {};\n    let pairs = qs.split('&');\n    for (let i = 0, l = pairs.length; i < l; i++) {\n        let pair = pairs[i].split('=');\n        qry[decodeURIComponent(pair[0])] = decodeURIComponent(pair[1]);\n    }\n    return qry;\n}\n","// imported from https://github.com/unshiftio/yeast\n'use strict';\nconst alphabet = '0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz-_'.split(''), length = 64, map = {};\nlet seed = 0, i = 0, prev;\n/**\n * Return a string representing the specified number.\n *\n * @param {Number} num The number to convert.\n * @returns {String} The string representation of the number.\n * @api public\n */\nexport function encode(num) {\n    let encoded = '';\n    do {\n        encoded = alphabet[num % length] + encoded;\n        num = Math.floor(num / length);\n    } while (num > 0);\n    return encoded;\n}\n/**\n * Return the integer value specified by the given string.\n *\n * @param {String} str The string to convert.\n * @returns {Number} The integer value represented by the string.\n * @api public\n */\nexport function decode(str) {\n    let decoded = 0;\n    for (i = 0; i < str.length; i++) {\n        decoded = decoded * length + map[str.charAt(i)];\n    }\n    return decoded;\n}\n/**\n * Yeast: A tiny growing id generator.\n *\n * @returns {String} A unique id.\n * @api public\n */\nexport function yeast() {\n    const now = encode(+new Date());\n    if (now !== prev)\n        return seed = 0, prev = now;\n    return now + '.' + encode(seed++);\n}\n//\n// Map each character to its index.\n//\nfor (; i < length; i++)\n    map[alphabet[i]] = i;\n","// imported from https://github.com/component/has-cors\nlet value = false;\ntry {\n    value = typeof XMLHttpRequest !== 'undefined' &&\n        'withCredentials' in new XMLHttpRequest();\n}\ncatch (err) {\n    // if XMLHttp support is disabled in IE then it will throw\n    // when trying to create\n}\nexport const hasCORS = value;\n","// browser shim for xmlhttprequest module\nimport { hasCORS } from \"../contrib/has-cors.js\";\nimport { globalThisShim as globalThis } from \"../globalThis.js\";\nexport function XHR(opts) {\n    const xdomain = opts.xdomain;\n    // XMLHttpRequest can be disabled on IE\n    try {\n        if (\"undefined\" !== typeof XMLHttpRequest && (!xdomain || hasCORS)) {\n            return new XMLHttpRequest();\n        }\n    }\n    catch (e) { }\n    if (!xdomain) {\n        try {\n            return new globalThis[[\"Active\"].concat(\"Object\").join(\"X\")](\"Microsoft.XMLHTTP\");\n        }\n        catch (e) { }\n    }\n}\nexport function createCookieJar() { }\n","import { Transport } from \"../transport.js\";\nimport { yeast } from \"../contrib/yeast.js\";\nimport { encodePayload, decodePayload } from \"engine.io-parser\";\nimport { createCookieJar, XHR as XMLHttpRequest, } from \"./xmlhttprequest.js\";\nimport { Emitter } from \"@socket.io/component-emitter\";\nimport { installTimerFunctions, pick } from \"../util.js\";\nimport { globalThisShim as globalThis } from \"../globalThis.js\";\nfunction empty() { }\nconst hasXHR2 = (function () {\n    const xhr = new XMLHttpRequest({\n        xdomain: false,\n    });\n    return null != xhr.responseType;\n})();\nexport class Polling extends Transport {\n    /**\n     * XHR Polling constructor.\n     *\n     * @param {Object} opts\n     * @package\n     */\n    constructor(opts) {\n        super(opts);\n        this.polling = false;\n        if (typeof location !== \"undefined\") {\n            const isSSL = \"https:\" === location.protocol;\n            let port = location.port;\n            // some user agents have empty `location.port`\n            if (!port) {\n                port = isSSL ? \"443\" : \"80\";\n            }\n            this.xd =\n                (typeof location !== \"undefined\" &&\n                    opts.hostname !== location.hostname) ||\n                    port !== opts.port;\n        }\n        /**\n         * XHR supports binary\n         */\n        const forceBase64 = opts && opts.forceBase64;\n        this.supportsBinary = hasXHR2 && !forceBase64;\n        if (this.opts.withCredentials) {\n            this.cookieJar = createCookieJar();\n        }\n    }\n    get name() {\n        return \"polling\";\n    }\n    /**\n     * Opens the socket (triggers polling). We write a PING message to determine\n     * when the transport is open.\n     *\n     * @protected\n     */\n    doOpen() {\n        this.poll();\n    }\n    /**\n     * Pauses polling.\n     *\n     * @param {Function} onPause - callback upon buffers are flushed and transport is paused\n     * @package\n     */\n    pause(onPause) {\n        this.readyState = \"pausing\";\n        const pause = () => {\n            this.readyState = \"paused\";\n            onPause();\n        };\n        if (this.polling || !this.writable) {\n            let total = 0;\n            if (this.polling) {\n                total++;\n                this.once(\"pollComplete\", function () {\n                    --total || pause();\n                });\n            }\n            if (!this.writable) {\n                total++;\n                this.once(\"drain\", function () {\n                    --total || pause();\n                });\n            }\n        }\n        else {\n            pause();\n        }\n    }\n    /**\n     * Starts polling cycle.\n     *\n     * @private\n     */\n    poll() {\n        this.polling = true;\n        this.doPoll();\n        this.emitReserved(\"poll\");\n    }\n    /**\n     * Overloads onData to detect payloads.\n     *\n     * @protected\n     */\n    onData(data) {\n        const callback = (packet) => {\n            // if its the first message we consider the transport open\n            if (\"opening\" === this.readyState && packet.type === \"open\") {\n                this.onOpen();\n            }\n            // if its a close packet, we close the ongoing requests\n            if (\"close\" === packet.type) {\n                this.onClose({ description: \"transport closed by the server\" });\n                return false;\n            }\n            // otherwise bypass onData and handle the message\n            this.onPacket(packet);\n        };\n        // decode payload\n        decodePayload(data, this.socket.binaryType).forEach(callback);\n        // if an event did not trigger closing\n        if (\"closed\" !== this.readyState) {\n            // if we got data we're not polling\n            this.polling = false;\n            this.emitReserved(\"pollComplete\");\n            if (\"open\" === this.readyState) {\n                this.poll();\n            }\n            else {\n            }\n        }\n    }\n    /**\n     * For polling, send a close packet.\n     *\n     * @protected\n     */\n    doClose() {\n        const close = () => {\n            this.write([{ type: \"close\" }]);\n        };\n        if (\"open\" === this.readyState) {\n            close();\n        }\n        else {\n            // in case we're trying to close while\n            // handshaking is in progress (GH-164)\n            this.once(\"open\", close);\n        }\n    }\n    /**\n     * Writes a packets payload.\n     *\n     * @param {Array} packets - data packets\n     * @protected\n     */\n    write(packets) {\n        this.writable = false;\n        encodePayload(packets, (data) => {\n            this.doWrite(data, () => {\n                this.writable = true;\n                this.emitReserved(\"drain\");\n            });\n        });\n    }\n    /**\n     * Generates uri for connection.\n     *\n     * @private\n     */\n    uri() {\n        const schema = this.opts.secure ? \"https\" : \"http\";\n        const query = this.query || {};\n        // cache busting is forced\n        if (false !== this.opts.timestampRequests) {\n            query[this.opts.timestampParam] = yeast();\n        }\n        if (!this.supportsBinary && !query.sid) {\n            query.b64 = 1;\n        }\n        return this.createUri(schema, query);\n    }\n    /**\n     * Creates a request.\n     *\n     * @param {String} method\n     * @private\n     */\n    request(opts = {}) {\n        Object.assign(opts, { xd: this.xd, cookieJar: this.cookieJar }, this.opts);\n        return new Request(this.uri(), opts);\n    }\n    /**\n     * Sends data.\n     *\n     * @param {String} data to send.\n     * @param {Function} called upon flush.\n     * @private\n     */\n    doWrite(data, fn) {\n        const req = this.request({\n            method: \"POST\",\n            data: data,\n        });\n        req.on(\"success\", fn);\n        req.on(\"error\", (xhrStatus, context) => {\n            this.onError(\"xhr post error\", xhrStatus, context);\n        });\n    }\n    /**\n     * Starts a poll cycle.\n     *\n     * @private\n     */\n    doPoll() {\n        const req = this.request();\n        req.on(\"data\", this.onData.bind(this));\n        req.on(\"error\", (xhrStatus, context) => {\n            this.onError(\"xhr poll error\", xhrStatus, context);\n        });\n        this.pollXhr = req;\n    }\n}\nexport class Request extends Emitter {\n    /**\n     * Request constructor\n     *\n     * @param {Object} options\n     * @package\n     */\n    constructor(uri, opts) {\n        super();\n        installTimerFunctions(this, opts);\n        this.opts = opts;\n        this.method = opts.method || \"GET\";\n        this.uri = uri;\n        this.data = undefined !== opts.data ? opts.data : null;\n        this.create();\n    }\n    /**\n     * Creates the XHR object and sends the request.\n     *\n     * @private\n     */\n    create() {\n        var _a;\n        const opts = pick(this.opts, \"agent\", \"pfx\", \"key\", \"passphrase\", \"cert\", \"ca\", \"ciphers\", \"rejectUnauthorized\", \"autoUnref\");\n        opts.xdomain = !!this.opts.xd;\n        const xhr = (this.xhr = new XMLHttpRequest(opts));\n        try {\n            xhr.open(this.method, this.uri, true);\n            try {\n                if (this.opts.extraHeaders) {\n                    xhr.setDisableHeaderCheck && xhr.setDisableHeaderCheck(true);\n                    for (let i in this.opts.extraHeaders) {\n                        if (this.opts.extraHeaders.hasOwnProperty(i)) {\n                            xhr.setRequestHeader(i, this.opts.extraHeaders[i]);\n                        }\n                    }\n                }\n            }\n            catch (e) { }\n            if (\"POST\" === this.method) {\n                try {\n                    xhr.setRequestHeader(\"Content-type\", \"text/plain;charset=UTF-8\");\n                }\n                catch (e) { }\n            }\n            try {\n                xhr.setRequestHeader(\"Accept\", \"*/*\");\n            }\n            catch (e) { }\n            (_a = this.opts.cookieJar) === null || _a === void 0 ? void 0 : _a.addCookies(xhr);\n            // ie6 check\n            if (\"withCredentials\" in xhr) {\n                xhr.withCredentials = this.opts.withCredentials;\n            }\n            if (this.opts.requestTimeout) {\n                xhr.timeout = this.opts.requestTimeout;\n            }\n            xhr.onreadystatechange = () => {\n                var _a;\n                if (xhr.readyState === 3) {\n                    (_a = this.opts.cookieJar) === null || _a === void 0 ? void 0 : _a.parseCookies(xhr);\n                }\n                if (4 !== xhr.readyState)\n                    return;\n                if (200 === xhr.status || 1223 === xhr.status) {\n                    this.onLoad();\n                }\n                else {\n                    // make sure the `error` event handler that's user-set\n                    // does not throw in the same tick and gets caught here\n                    this.setTimeoutFn(() => {\n                        this.onError(typeof xhr.status === \"number\" ? xhr.status : 0);\n                    }, 0);\n                }\n            };\n            xhr.send(this.data);\n        }\n        catch (e) {\n            // Need to defer since .create() is called directly from the constructor\n            // and thus the 'error' event can only be only bound *after* this exception\n            // occurs.  Therefore, also, we cannot throw here at all.\n            this.setTimeoutFn(() => {\n                this.onError(e);\n            }, 0);\n            return;\n        }\n        if (typeof document !== \"undefined\") {\n            this.index = Request.requestsCount++;\n            Request.requests[this.index] = this;\n        }\n    }\n    /**\n     * Called upon error.\n     *\n     * @private\n     */\n    onError(err) {\n        this.emitReserved(\"error\", err, this.xhr);\n        this.cleanup(true);\n    }\n    /**\n     * Cleans up house.\n     *\n     * @private\n     */\n    cleanup(fromError) {\n        if (\"undefined\" === typeof this.xhr || null === this.xhr) {\n            return;\n        }\n        this.xhr.onreadystatechange = empty;\n        if (fromError) {\n            try {\n                this.xhr.abort();\n            }\n            catch (e) { }\n        }\n        if (typeof document !== \"undefined\") {\n            delete Request.requests[this.index];\n        }\n        this.xhr = null;\n    }\n    /**\n     * Called upon load.\n     *\n     * @private\n     */\n    onLoad() {\n        const data = this.xhr.responseText;\n        if (data !== null) {\n            this.emitReserved(\"data\", data);\n            this.emitReserved(\"success\");\n            this.cleanup();\n        }\n    }\n    /**\n     * Aborts the request.\n     *\n     * @package\n     */\n    abort() {\n        this.cleanup();\n    }\n}\nRequest.requestsCount = 0;\nRequest.requests = {};\n/**\n * Aborts pending requests when unloading the window. This is needed to prevent\n * memory leaks (e.g. when using IE) and to ensure that no spurious error is\n * emitted.\n */\nif (typeof document !== \"undefined\") {\n    // @ts-ignore\n    if (typeof attachEvent === \"function\") {\n        // @ts-ignore\n        attachEvent(\"onunload\", unloadHandler);\n    }\n    else if (typeof addEventListener === \"function\") {\n        const terminationEvent = \"onpagehide\" in globalThis ? \"pagehide\" : \"unload\";\n        addEventListener(terminationEvent, unloadHandler, false);\n    }\n}\nfunction unloadHandler() {\n    for (let i in Request.requests) {\n        if (Request.requests.hasOwnProperty(i)) {\n            Request.requests[i].abort();\n        }\n    }\n}\n","import { globalThisShim as globalThis } from \"../globalThis.js\";\nexport const nextTick = (() => {\n    const isPromiseAvailable = typeof Promise === \"function\" && typeof Promise.resolve === \"function\";\n    if (isPromiseAvailable) {\n        return (cb) => Promise.resolve().then(cb);\n    }\n    else {\n        return (cb, setTimeoutFn) => setTimeoutFn(cb, 0);\n    }\n})();\nexport const WebSocket = globalThis.WebSocket || globalThis.MozWebSocket;\nexport const usingBrowserWebSocket = true;\nexport const defaultBinaryType = \"arraybuffer\";\n","import { Transport } from \"../transport.js\";\nimport { yeast } from \"../contrib/yeast.js\";\nimport { pick } from \"../util.js\";\nimport { defaultBinaryType, nextTick, usingBrowserWebSocket, WebSocket, } from \"./websocket-constructor.js\";\nimport { encodePacket } from \"engine.io-parser\";\n// detect ReactNative environment\nconst isReactNative = typeof navigator !== \"undefined\" &&\n    typeof navigator.product === \"string\" &&\n    navigator.product.toLowerCase() === \"reactnative\";\nexport class WS extends Transport {\n    /**\n     * WebSocket transport constructor.\n     *\n     * @param {Object} opts - connection options\n     * @protected\n     */\n    constructor(opts) {\n        super(opts);\n        this.supportsBinary = !opts.forceBase64;\n    }\n    get name() {\n        return \"websocket\";\n    }\n    doOpen() {\n        if (!this.check()) {\n            // let probe timeout\n            return;\n        }\n        const uri = this.uri();\n        const protocols = this.opts.protocols;\n        // React Native only supports the 'headers' option, and will print a warning if anything else is passed\n        const opts = isReactNative\n            ? {}\n            : pick(this.opts, \"agent\", \"perMessageDeflate\", \"pfx\", \"key\", \"passphrase\", \"cert\", \"ca\", \"ciphers\", \"rejectUnauthorized\", \"localAddress\", \"protocolVersion\", \"origin\", \"maxPayload\", \"family\", \"checkServerIdentity\");\n        if (this.opts.extraHeaders) {\n            opts.headers = this.opts.extraHeaders;\n        }\n        try {\n            this.ws =\n                usingBrowserWebSocket && !isReactNative\n                    ? protocols\n                        ? new WebSocket(uri, protocols)\n                        : new WebSocket(uri)\n                    : new WebSocket(uri, protocols, opts);\n        }\n        catch (err) {\n            return this.emitReserved(\"error\", err);\n        }\n        this.ws.binaryType = this.socket.binaryType || defaultBinaryType;\n        this.addEventListeners();\n    }\n    /**\n     * Adds event listeners to the socket\n     *\n     * @private\n     */\n    addEventListeners() {\n        this.ws.onopen = () => {\n            if (this.opts.autoUnref) {\n                this.ws._socket.unref();\n            }\n            this.onOpen();\n        };\n        this.ws.onclose = (closeEvent) => this.onClose({\n            description: \"websocket connection closed\",\n            context: closeEvent,\n        });\n        this.ws.onmessage = (ev) => this.onData(ev.data);\n        this.ws.onerror = (e) => this.onError(\"websocket error\", e);\n    }\n    write(packets) {\n        this.writable = false;\n        // encodePacket efficient as it uses WS framing\n        // no need for encodePayload\n        for (let i = 0; i < packets.length; i++) {\n            const packet = packets[i];\n            const lastPacket = i === packets.length - 1;\n            encodePacket(packet, this.supportsBinary, (data) => {\n                // always create a new object (GH-437)\n                const opts = {};\n                if (!usingBrowserWebSocket) {\n                    if (packet.options) {\n                        opts.compress = packet.options.compress;\n                    }\n                    if (this.opts.perMessageDeflate) {\n                        const len = \n                        // @ts-ignore\n                        \"string\" === typeof data ? Buffer.byteLength(data) : data.length;\n                        if (len < this.opts.perMessageDeflate.threshold) {\n                            opts.compress = false;\n                        }\n                    }\n                }\n                // Sometimes the websocket has already been closed but the browser didn't\n                // have a chance of informing us about it yet, in that case send will\n                // throw an error\n                try {\n                    if (usingBrowserWebSocket) {\n                        // TypeError is thrown when passing the second argument on Safari\n                        this.ws.send(data);\n                    }\n                    else {\n                        this.ws.send(data, opts);\n                    }\n                }\n                catch (e) {\n                }\n                if (lastPacket) {\n                    // fake drain\n                    // defer to next tick to allow Socket to clear writeBuffer\n                    nextTick(() => {\n                        this.writable = true;\n                        this.emitReserved(\"drain\");\n                    }, this.setTimeoutFn);\n                }\n            });\n        }\n    }\n    doClose() {\n        if (typeof this.ws !== \"undefined\") {\n            this.ws.close();\n            this.ws = null;\n        }\n    }\n    /**\n     * Generates uri for connection.\n     *\n     * @private\n     */\n    uri() {\n        const schema = this.opts.secure ? \"wss\" : \"ws\";\n        const query = this.query || {};\n        // append timestamp to URI\n        if (this.opts.timestampRequests) {\n            query[this.opts.timestampParam] = yeast();\n        }\n        // communicate binary support capabilities\n        if (!this.supportsBinary) {\n            query.b64 = 1;\n        }\n        return this.createUri(schema, query);\n    }\n    /**\n     * Feature detection for WebSocket.\n     *\n     * @return {Boolean} whether this transport is available.\n     * @private\n     */\n    check() {\n        return !!WebSocket;\n    }\n}\n","import { Transport } from \"../transport.js\";\nimport { nextTick } from \"./websocket-constructor.js\";\nimport { encodePacketToBinary, decodePacketFromBinary, } from \"engine.io-parser\";\nfunction shouldIncludeBinaryHeader(packet, encoded) {\n    // 48 === \"0\".charCodeAt(0) (OPEN packet type)\n    // 54 === \"6\".charCodeAt(0) (NOOP packet type)\n    return (packet.type === \"message\" &&\n        typeof packet.data !== \"string\" &&\n        encoded[0] >= 48 &&\n        encoded[0] <= 54);\n}\nexport class WT extends Transport {\n    get name() {\n        return \"webtransport\";\n    }\n    doOpen() {\n        // @ts-ignore\n        if (typeof WebTransport !== \"function\") {\n            return;\n        }\n        // @ts-ignore\n        this.transport = new WebTransport(this.createUri(\"https\"), this.opts.transportOptions[this.name]);\n        this.transport.closed\n            .then(() => {\n            this.onClose();\n        })\n            .catch((err) => {\n            this.onError(\"webtransport error\", err);\n        });\n        // note: we could have used async/await, but that would require some additional polyfills\n        this.transport.ready.then(() => {\n            this.transport.createBidirectionalStream().then((stream) => {\n                const reader = stream.readable.getReader();\n                this.writer = stream.writable.getWriter();\n                let binaryFlag;\n                const read = () => {\n                    reader\n                        .read()\n                        .then(({ done, value }) => {\n                        if (done) {\n                            return;\n                        }\n                        if (!binaryFlag && value.byteLength === 1 && value[0] === 54) {\n                            binaryFlag = true;\n                        }\n                        else {\n                            // TODO expose binarytype\n                            this.onPacket(decodePacketFromBinary(value, binaryFlag, \"arraybuffer\"));\n                            binaryFlag = false;\n                        }\n                        read();\n                    })\n                        .catch((err) => {\n                    });\n                };\n                read();\n                const handshake = this.query.sid ? `0{\"sid\":\"${this.query.sid}\"}` : \"0\";\n                this.writer\n                    .write(new TextEncoder().encode(handshake))\n                    .then(() => this.onOpen());\n            });\n        });\n    }\n    write(packets) {\n        this.writable = false;\n        for (let i = 0; i < packets.length; i++) {\n            const packet = packets[i];\n            const lastPacket = i === packets.length - 1;\n            encodePacketToBinary(packet, (data) => {\n                if (shouldIncludeBinaryHeader(packet, data)) {\n                    this.writer.write(Uint8Array.of(54));\n                }\n                this.writer.write(data).then(() => {\n                    if (lastPacket) {\n                        nextTick(() => {\n                            this.writable = true;\n                            this.emitReserved(\"drain\");\n                        }, this.setTimeoutFn);\n                    }\n                });\n            });\n        }\n    }\n    doClose() {\n        var _a;\n        (_a = this.transport) === null || _a === void 0 ? void 0 : _a.close();\n    }\n}\n","import { Polling } from \"./polling.js\";\nimport { WS } from \"./websocket.js\";\nimport { WT } from \"./webtransport.js\";\nexport const transports = {\n    websocket: WS,\n    webtransport: WT,\n    polling: Polling,\n};\n","// imported from https://github.com/galkn/parseuri\n/**\n * Parses a URI\n *\n * Note: we could also have used the built-in URL object, but it isn't supported on all platforms.\n *\n * See:\n * - https://developer.mozilla.org/en-US/docs/Web/API/URL\n * - https://caniuse.com/url\n * - https://www.rfc-editor.org/rfc/rfc3986#appendix-B\n *\n * History of the parse() method:\n * - first commit: https://github.com/socketio/socket.io-client/commit/4ee1d5d94b3906a9c052b459f1a818b15f38f91c\n * - export into its own module: https://github.com/socketio/engine.io-client/commit/de2c561e4564efeb78f1bdb1ba39ef81b2822cb3\n * - reimport: https://github.com/socketio/engine.io-client/commit/df32277c3f6d622eec5ed09f493cae3f3391d242\n *\n * @author Steven Levithan <stevenlevithan.com> (MIT license)\n * @api private\n */\nconst re = /^(?:(?![^:@\\/?#]+:[^:@\\/]*@)(http|https|ws|wss):\\/\\/)?((?:(([^:@\\/?#]*)(?::([^:@\\/?#]*))?)?@)?((?:[a-f0-9]{0,4}:){2,7}[a-f0-9]{0,4}|[^:\\/?#]*)(?::(\\d*))?)(((\\/(?:[^?#](?![^?#\\/]*\\.[^?#\\/.]+(?:[?#]|$)))*\\/?)?([^?#\\/]*))(?:\\?([^#]*))?(?:#(.*))?)/;\nconst parts = [\n    'source', 'protocol', 'authority', 'userInfo', 'user', 'password', 'host', 'port', 'relative', 'path', 'directory', 'file', 'query', 'anchor'\n];\nexport function parse(str) {\n    const src = str, b = str.indexOf('['), e = str.indexOf(']');\n    if (b != -1 && e != -1) {\n        str = str.substring(0, b) + str.substring(b, e).replace(/:/g, ';') + str.substring(e, str.length);\n    }\n    let m = re.exec(str || ''), uri = {}, i = 14;\n    while (i--) {\n        uri[parts[i]] = m[i] || '';\n    }\n    if (b != -1 && e != -1) {\n        uri.source = src;\n        uri.host = uri.host.substring(1, uri.host.length - 1).replace(/;/g, ':');\n        uri.authority = uri.authority.replace('[', '').replace(']', '').replace(/;/g, ':');\n        uri.ipv6uri = true;\n    }\n    uri.pathNames = pathNames(uri, uri['path']);\n    uri.queryKey = queryKey(uri, uri['query']);\n    return uri;\n}\nfunction pathNames(obj, path) {\n    const regx = /\\/{2,9}/g, names = path.replace(regx, \"/\").split(\"/\");\n    if (path.slice(0, 1) == '/' || path.length === 0) {\n        names.splice(0, 1);\n    }\n    if (path.slice(-1) == '/') {\n        names.splice(names.length - 1, 1);\n    }\n    return names;\n}\nfunction queryKey(uri, query) {\n    const data = {};\n    query.replace(/(?:^|&)([^&=]*)=?([^&]*)/g, function ($0, $1, $2) {\n        if ($1) {\n            data[$1] = $2;\n        }\n    });\n    return data;\n}\n","import { transports } from \"./transports/index.js\";\nimport { installTimerFunctions, byteLength } from \"./util.js\";\nimport { decode } from \"./contrib/parseqs.js\";\nimport { parse } from \"./contrib/parseuri.js\";\nimport { Emitter } from \"@socket.io/component-emitter\";\nimport { protocol } from \"engine.io-parser\";\nexport class Socket extends Emitter {\n    /**\n     * Socket constructor.\n     *\n     * @param {String|Object} uri - uri or options\n     * @param {Object} opts - options\n     */\n    constructor(uri, opts = {}) {\n        super();\n        this.writeBuffer = [];\n        if (uri && \"object\" === typeof uri) {\n            opts = uri;\n            uri = null;\n        }\n        if (uri) {\n            uri = parse(uri);\n            opts.hostname = uri.host;\n            opts.secure = uri.protocol === \"https\" || uri.protocol === \"wss\";\n            opts.port = uri.port;\n            if (uri.query)\n                opts.query = uri.query;\n        }\n        else if (opts.host) {\n            opts.hostname = parse(opts.host).host;\n        }\n        installTimerFunctions(this, opts);\n        this.secure =\n            null != opts.secure\n                ? opts.secure\n                : typeof location !== \"undefined\" && \"https:\" === location.protocol;\n        if (opts.hostname && !opts.port) {\n            // if no port is specified manually, use the protocol default\n            opts.port = this.secure ? \"443\" : \"80\";\n        }\n        this.hostname =\n            opts.hostname ||\n                (typeof location !== \"undefined\" ? location.hostname : \"localhost\");\n        this.port =\n            opts.port ||\n                (typeof location !== \"undefined\" && location.port\n                    ? location.port\n                    : this.secure\n                        ? \"443\"\n                        : \"80\");\n        this.transports = opts.transports || [\n            \"polling\",\n            \"websocket\",\n            \"webtransport\",\n        ];\n        this.writeBuffer = [];\n        this.prevBufferLen = 0;\n        this.opts = Object.assign({\n            path: \"/engine.io\",\n            agent: false,\n            withCredentials: false,\n            upgrade: true,\n            timestampParam: \"t\",\n            rememberUpgrade: false,\n            addTrailingSlash: true,\n            rejectUnauthorized: true,\n            perMessageDeflate: {\n                threshold: 1024,\n            },\n            transportOptions: {},\n            closeOnBeforeunload: false,\n        }, opts);\n        this.opts.path =\n            this.opts.path.replace(/\\/$/, \"\") +\n                (this.opts.addTrailingSlash ? \"/\" : \"\");\n        if (typeof this.opts.query === \"string\") {\n            this.opts.query = decode(this.opts.query);\n        }\n        // set on handshake\n        this.id = null;\n        this.upgrades = null;\n        this.pingInterval = null;\n        this.pingTimeout = null;\n        // set on heartbeat\n        this.pingTimeoutTimer = null;\n        if (typeof addEventListener === \"function\") {\n            if (this.opts.closeOnBeforeunload) {\n                // Firefox closes the connection when the \"beforeunload\" event is emitted but not Chrome. This event listener\n                // ensures every browser behaves the same (no \"disconnect\" event at the Socket.IO level when the page is\n                // closed/reloaded)\n                this.beforeunloadEventListener = () => {\n                    if (this.transport) {\n                        // silently close the transport\n                        this.transport.removeAllListeners();\n                        this.transport.close();\n                    }\n                };\n                addEventListener(\"beforeunload\", this.beforeunloadEventListener, false);\n            }\n            if (this.hostname !== \"localhost\") {\n                this.offlineEventListener = () => {\n                    this.onClose(\"transport close\", {\n                        description: \"network connection lost\",\n                    });\n                };\n                addEventListener(\"offline\", this.offlineEventListener, false);\n            }\n        }\n        this.open();\n    }\n    /**\n     * Creates transport of the given type.\n     *\n     * @param {String} name - transport name\n     * @return {Transport}\n     * @private\n     */\n    createTransport(name) {\n        const query = Object.assign({}, this.opts.query);\n        // append engine.io protocol identifier\n        query.EIO = protocol;\n        // transport name\n        query.transport = name;\n        // session id if we already have one\n        if (this.id)\n            query.sid = this.id;\n        const opts = Object.assign({}, this.opts, {\n            query,\n            socket: this,\n            hostname: this.hostname,\n            secure: this.secure,\n            port: this.port,\n        }, this.opts.transportOptions[name]);\n        return new transports[name](opts);\n    }\n    /**\n     * Initializes transport to use and starts probe.\n     *\n     * @private\n     */\n    open() {\n        let transport;\n        if (this.opts.rememberUpgrade &&\n            Socket.priorWebsocketSuccess &&\n            this.transports.indexOf(\"websocket\") !== -1) {\n            transport = \"websocket\";\n        }\n        else if (0 === this.transports.length) {\n            // Emit error on next tick so it can be listened to\n            this.setTimeoutFn(() => {\n                this.emitReserved(\"error\", \"No transports available\");\n            }, 0);\n            return;\n        }\n        else {\n            transport = this.transports[0];\n        }\n        this.readyState = \"opening\";\n        // Retry with the next transport if the transport is disabled (jsonp: false)\n        try {\n            transport = this.createTransport(transport);\n        }\n        catch (e) {\n            this.transports.shift();\n            this.open();\n            return;\n        }\n        transport.open();\n        this.setTransport(transport);\n    }\n    /**\n     * Sets the current transport. Disables the existing one (if any).\n     *\n     * @private\n     */\n    setTransport(transport) {\n        if (this.transport) {\n            this.transport.removeAllListeners();\n        }\n        // set up transport\n        this.transport = transport;\n        // set up transport listeners\n        transport\n            .on(\"drain\", this.onDrain.bind(this))\n            .on(\"packet\", this.onPacket.bind(this))\n            .on(\"error\", this.onError.bind(this))\n            .on(\"close\", (reason) => this.onClose(\"transport close\", reason));\n    }\n    /**\n     * Probes a transport.\n     *\n     * @param {String} name - transport name\n     * @private\n     */\n    probe(name) {\n        let transport = this.createTransport(name);\n        let failed = false;\n        Socket.priorWebsocketSuccess = false;\n        const onTransportOpen = () => {\n            if (failed)\n                return;\n            transport.send([{ type: \"ping\", data: \"probe\" }]);\n            transport.once(\"packet\", (msg) => {\n                if (failed)\n                    return;\n                if (\"pong\" === msg.type && \"probe\" === msg.data) {\n                    this.upgrading = true;\n                    this.emitReserved(\"upgrading\", transport);\n                    if (!transport)\n                        return;\n                    Socket.priorWebsocketSuccess = \"websocket\" === transport.name;\n                    this.transport.pause(() => {\n                        if (failed)\n                            return;\n                        if (\"closed\" === this.readyState)\n                            return;\n                        cleanup();\n                        this.setTransport(transport);\n                        transport.send([{ type: \"upgrade\" }]);\n                        this.emitReserved(\"upgrade\", transport);\n                        transport = null;\n                        this.upgrading = false;\n                        this.flush();\n                    });\n                }\n                else {\n                    const err = new Error(\"probe error\");\n                    // @ts-ignore\n                    err.transport = transport.name;\n                    this.emitReserved(\"upgradeError\", err);\n                }\n            });\n        };\n        function freezeTransport() {\n            if (failed)\n                return;\n            // Any callback called by transport should be ignored since now\n            failed = true;\n            cleanup();\n            transport.close();\n            transport = null;\n        }\n        // Handle any error that happens while probing\n        const onerror = (err) => {\n            const error = new Error(\"probe error: \" + err);\n            // @ts-ignore\n            error.transport = transport.name;\n            freezeTransport();\n            this.emitReserved(\"upgradeError\", error);\n        };\n        function onTransportClose() {\n            onerror(\"transport closed\");\n        }\n        // When the socket is closed while we're probing\n        function onclose() {\n            onerror(\"socket closed\");\n        }\n        // When the socket is upgraded while we're probing\n        function onupgrade(to) {\n            if (transport && to.name !== transport.name) {\n                freezeTransport();\n            }\n        }\n        // Remove all listeners on the transport and on self\n        const cleanup = () => {\n            transport.removeListener(\"open\", onTransportOpen);\n            transport.removeListener(\"error\", onerror);\n            transport.removeListener(\"close\", onTransportClose);\n            this.off(\"close\", onclose);\n            this.off(\"upgrading\", onupgrade);\n        };\n        transport.once(\"open\", onTransportOpen);\n        transport.once(\"error\", onerror);\n        transport.once(\"close\", onTransportClose);\n        this.once(\"close\", onclose);\n        this.once(\"upgrading\", onupgrade);\n        if (this.upgrades.indexOf(\"webtransport\") !== -1 &&\n            name !== \"webtransport\") {\n            // favor WebTransport\n            this.setTimeoutFn(() => {\n                if (!failed) {\n                    transport.open();\n                }\n            }, 200);\n        }\n        else {\n            transport.open();\n        }\n    }\n    /**\n     * Called when connection is deemed open.\n     *\n     * @private\n     */\n    onOpen() {\n        this.readyState = \"open\";\n        Socket.priorWebsocketSuccess = \"websocket\" === this.transport.name;\n        this.emitReserved(\"open\");\n        this.flush();\n        // we check for `readyState` in case an `open`\n        // listener already closed the socket\n        if (\"open\" === this.readyState && this.opts.upgrade) {\n            let i = 0;\n            const l = this.upgrades.length;\n            for (; i < l; i++) {\n                this.probe(this.upgrades[i]);\n            }\n        }\n    }\n    /**\n     * Handles a packet.\n     *\n     * @private\n     */\n    onPacket(packet) {\n        if (\"opening\" === this.readyState ||\n            \"open\" === this.readyState ||\n            \"closing\" === this.readyState) {\n            this.emitReserved(\"packet\", packet);\n            // Socket is live - any packet counts\n            this.emitReserved(\"heartbeat\");\n            switch (packet.type) {\n                case \"open\":\n                    this.onHandshake(JSON.parse(packet.data));\n                    break;\n                case \"ping\":\n                    this.resetPingTimeout();\n                    this.sendPacket(\"pong\");\n                    this.emitReserved(\"ping\");\n                    this.emitReserved(\"pong\");\n                    break;\n                case \"error\":\n                    const err = new Error(\"server error\");\n                    // @ts-ignore\n                    err.code = packet.data;\n                    this.onError(err);\n                    break;\n                case \"message\":\n                    this.emitReserved(\"data\", packet.data);\n                    this.emitReserved(\"message\", packet.data);\n                    break;\n            }\n        }\n        else {\n        }\n    }\n    /**\n     * Called upon handshake completion.\n     *\n     * @param {Object} data - handshake obj\n     * @private\n     */\n    onHandshake(data) {\n        this.emitReserved(\"handshake\", data);\n        this.id = data.sid;\n        this.transport.query.sid = data.sid;\n        this.upgrades = this.filterUpgrades(data.upgrades);\n        this.pingInterval = data.pingInterval;\n        this.pingTimeout = data.pingTimeout;\n        this.maxPayload = data.maxPayload;\n        this.onOpen();\n        // In case open handler closes socket\n        if (\"closed\" === this.readyState)\n            return;\n        this.resetPingTimeout();\n    }\n    /**\n     * Sets and resets ping timeout timer based on server pings.\n     *\n     * @private\n     */\n    resetPingTimeout() {\n        this.clearTimeoutFn(this.pingTimeoutTimer);\n        this.pingTimeoutTimer = this.setTimeoutFn(() => {\n            this.onClose(\"ping timeout\");\n        }, this.pingInterval + this.pingTimeout);\n        if (this.opts.autoUnref) {\n            this.pingTimeoutTimer.unref();\n        }\n    }\n    /**\n     * Called on `drain` event\n     *\n     * @private\n     */\n    onDrain() {\n        this.writeBuffer.splice(0, this.prevBufferLen);\n        // setting prevBufferLen = 0 is very important\n        // for example, when upgrading, upgrade packet is sent over,\n        // and a nonzero prevBufferLen could cause problems on `drain`\n        this.prevBufferLen = 0;\n        if (0 === this.writeBuffer.length) {\n            this.emitReserved(\"drain\");\n        }\n        else {\n            this.flush();\n        }\n    }\n    /**\n     * Flush write buffers.\n     *\n     * @private\n     */\n    flush() {\n        if (\"closed\" !== this.readyState &&\n            this.transport.writable &&\n            !this.upgrading &&\n            this.writeBuffer.length) {\n            const packets = this.getWritablePackets();\n            this.transport.send(packets);\n            // keep track of current length of writeBuffer\n            // splice writeBuffer and callbackBuffer on `drain`\n            this.prevBufferLen = packets.length;\n            this.emitReserved(\"flush\");\n        }\n    }\n    /**\n     * Ensure the encoded size of the writeBuffer is below the maxPayload value sent by the server (only for HTTP\n     * long-polling)\n     *\n     * @private\n     */\n    getWritablePackets() {\n        const shouldCheckPayloadSize = this.maxPayload &&\n            this.transport.name === \"polling\" &&\n            this.writeBuffer.length > 1;\n        if (!shouldCheckPayloadSize) {\n            return this.writeBuffer;\n        }\n        let payloadSize = 1; // first packet type\n        for (let i = 0; i < this.writeBuffer.length; i++) {\n            const data = this.writeBuffer[i].data;\n            if (data) {\n                payloadSize += byteLength(data);\n            }\n            if (i > 0 && payloadSize > this.maxPayload) {\n                return this.writeBuffer.slice(0, i);\n            }\n            payloadSize += 2; // separator + packet type\n        }\n        return this.writeBuffer;\n    }\n    /**\n     * Sends a message.\n     *\n     * @param {String} msg - message.\n     * @param {Object} options.\n     * @param {Function} callback function.\n     * @return {Socket} for chaining.\n     */\n    write(msg, options, fn) {\n        this.sendPacket(\"message\", msg, options, fn);\n        return this;\n    }\n    send(msg, options, fn) {\n        this.sendPacket(\"message\", msg, options, fn);\n        return this;\n    }\n    /**\n     * Sends a packet.\n     *\n     * @param {String} type: packet type.\n     * @param {String} data.\n     * @param {Object} options.\n     * @param {Function} fn - callback function.\n     * @private\n     */\n    sendPacket(type, data, options, fn) {\n        if (\"function\" === typeof data) {\n            fn = data;\n            data = undefined;\n        }\n        if (\"function\" === typeof options) {\n            fn = options;\n            options = null;\n        }\n        if (\"closing\" === this.readyState || \"closed\" === this.readyState) {\n            return;\n        }\n        options = options || {};\n        options.compress = false !== options.compress;\n        const packet = {\n            type: type,\n            data: data,\n            options: options,\n        };\n        this.emitReserved(\"packetCreate\", packet);\n        this.writeBuffer.push(packet);\n        if (fn)\n            this.once(\"flush\", fn);\n        this.flush();\n    }\n    /**\n     * Closes the connection.\n     */\n    close() {\n        const close = () => {\n            this.onClose(\"forced close\");\n            this.transport.close();\n        };\n        const cleanupAndClose = () => {\n            this.off(\"upgrade\", cleanupAndClose);\n            this.off(\"upgradeError\", cleanupAndClose);\n            close();\n        };\n        const waitForUpgrade = () => {\n            // wait for upgrade to finish since we can't send packets while pausing a transport\n            this.once(\"upgrade\", cleanupAndClose);\n            this.once(\"upgradeError\", cleanupAndClose);\n        };\n        if (\"opening\" === this.readyState || \"open\" === this.readyState) {\n            this.readyState = \"closing\";\n            if (this.writeBuffer.length) {\n                this.once(\"drain\", () => {\n                    if (this.upgrading) {\n                        waitForUpgrade();\n                    }\n                    else {\n                        close();\n                    }\n                });\n            }\n            else if (this.upgrading) {\n                waitForUpgrade();\n            }\n            else {\n                close();\n            }\n        }\n        return this;\n    }\n    /**\n     * Called upon transport error\n     *\n     * @private\n     */\n    onError(err) {\n        Socket.priorWebsocketSuccess = false;\n        this.emitReserved(\"error\", err);\n        this.onClose(\"transport error\", err);\n    }\n    /**\n     * Called upon transport close.\n     *\n     * @private\n     */\n    onClose(reason, description) {\n        if (\"opening\" === this.readyState ||\n            \"open\" === this.readyState ||\n            \"closing\" === this.readyState) {\n            // clear timers\n            this.clearTimeoutFn(this.pingTimeoutTimer);\n            // stop event from firing again for transport\n            this.transport.removeAllListeners(\"close\");\n            // ensure transport won't stay open\n            this.transport.close();\n            // ignore further transport communication\n            this.transport.removeAllListeners();\n            if (typeof removeEventListener === \"function\") {\n                removeEventListener(\"beforeunload\", this.beforeunloadEventListener, false);\n                removeEventListener(\"offline\", this.offlineEventListener, false);\n            }\n            // set ready state\n            this.readyState = \"closed\";\n            // clear session id\n            this.id = null;\n            // emit close event\n            this.emitReserved(\"close\", reason, description);\n            // clean buffers after, so users can still\n            // grab the buffers on `close` event\n            this.writeBuffer = [];\n            this.prevBufferLen = 0;\n        }\n    }\n    /**\n     * Filters upgrades, returning only those matching client transports.\n     *\n     * @param {Array} upgrades - server upgrades\n     * @private\n     */\n    filterUpgrades(upgrades) {\n        const filteredUpgrades = [];\n        let i = 0;\n        const j = upgrades.length;\n        for (; i < j; i++) {\n            if (~this.transports.indexOf(upgrades[i]))\n                filteredUpgrades.push(upgrades[i]);\n        }\n        return filteredUpgrades;\n    }\n}\nSocket.protocol = protocol;\n","const withNativeArrayBuffer = typeof ArrayBuffer === \"function\";\nconst isView = (obj) => {\n    return typeof ArrayBuffer.isView === \"function\"\n        ? ArrayBuffer.isView(obj)\n        : obj.buffer instanceof ArrayBuffer;\n};\nconst toString = Object.prototype.toString;\nconst withNativeBlob = typeof Blob === \"function\" ||\n    (typeof Blob !== \"undefined\" &&\n        toString.call(Blob) === \"[object BlobConstructor]\");\nconst withNativeFile = typeof File === \"function\" ||\n    (typeof File !== \"undefined\" &&\n        toString.call(File) === \"[object FileConstructor]\");\n/**\n * Returns true if obj is a Buffer, an ArrayBuffer, a Blob or a File.\n *\n * @private\n */\nexport function isBinary(obj) {\n    return ((withNativeArrayBuffer && (obj instanceof ArrayBuffer || isView(obj))) ||\n        (withNativeBlob && obj instanceof Blob) ||\n        (withNativeFile && obj instanceof File));\n}\nexport function hasBinary(obj, toJSON) {\n    if (!obj || typeof obj !== \"object\") {\n        return false;\n    }\n    if (Array.isArray(obj)) {\n        for (let i = 0, l = obj.length; i < l; i++) {\n            if (hasBinary(obj[i])) {\n                return true;\n            }\n        }\n        return false;\n    }\n    if (isBinary(obj)) {\n        return true;\n    }\n    if (obj.toJSON &&\n        typeof obj.toJSON === \"function\" &&\n        arguments.length === 1) {\n        return hasBinary(obj.toJSON(), true);\n    }\n    for (const key in obj) {\n        if (Object.prototype.hasOwnProperty.call(obj, key) && hasBinary(obj[key])) {\n            return true;\n        }\n    }\n    return false;\n}\n","import { isBinary } from \"./is-binary.js\";\n/**\n * Replaces every Buffer | ArrayBuffer | Blob | File in packet with a numbered placeholder.\n *\n * @param {Object} packet - socket.io event packet\n * @return {Object} with deconstructed packet and list of buffers\n * @public\n */\nexport function deconstructPacket(packet) {\n    const buffers = [];\n    const packetData = packet.data;\n    const pack = packet;\n    pack.data = _deconstructPacket(packetData, buffers);\n    pack.attachments = buffers.length; // number of binary 'attachments'\n    return { packet: pack, buffers: buffers };\n}\nfunction _deconstructPacket(data, buffers) {\n    if (!data)\n        return data;\n    if (isBinary(data)) {\n        const placeholder = { _placeholder: true, num: buffers.length };\n        buffers.push(data);\n        return placeholder;\n    }\n    else if (Array.isArray(data)) {\n        const newData = new Array(data.length);\n        for (let i = 0; i < data.length; i++) {\n            newData[i] = _deconstructPacket(data[i], buffers);\n        }\n        return newData;\n    }\n    else if (typeof data === \"object\" && !(data instanceof Date)) {\n        const newData = {};\n        for (const key in data) {\n            if (Object.prototype.hasOwnProperty.call(data, key)) {\n                newData[key] = _deconstructPacket(data[key], buffers);\n            }\n        }\n        return newData;\n    }\n    return data;\n}\n/**\n * Reconstructs a binary packet from its placeholder packet and buffers\n *\n * @param {Object} packet - event packet with placeholders\n * @param {Array} buffers - binary buffers to put in placeholder positions\n * @return {Object} reconstructed packet\n * @public\n */\nexport function reconstructPacket(packet, buffers) {\n    packet.data = _reconstructPacket(packet.data, buffers);\n    delete packet.attachments; // no longer useful\n    return packet;\n}\nfunction _reconstructPacket(data, buffers) {\n    if (!data)\n        return data;\n    if (data && data._placeholder === true) {\n        const isIndexValid = typeof data.num === \"number\" &&\n            data.num >= 0 &&\n            data.num < buffers.length;\n        if (isIndexValid) {\n            return buffers[data.num]; // appropriate buffer (should be natural order anyway)\n        }\n        else {\n            throw new Error(\"illegal attachments\");\n        }\n    }\n    else if (Array.isArray(data)) {\n        for (let i = 0; i < data.length; i++) {\n            data[i] = _reconstructPacket(data[i], buffers);\n        }\n    }\n    else if (typeof data === \"object\") {\n        for (const key in data) {\n            if (Object.prototype.hasOwnProperty.call(data, key)) {\n                data[key] = _reconstructPacket(data[key], buffers);\n            }\n        }\n    }\n    return data;\n}\n","import { Emitter } from \"@socket.io/component-emitter\";\nimport { deconstructPacket, reconstructPacket } from \"./binary.js\";\nimport { isBinary, hasBinary } from \"./is-binary.js\";\n/**\n * These strings must not be used as event names, as they have a special meaning.\n */\nconst RESERVED_EVENTS = [\n    \"connect\",\n    \"connect_error\",\n    \"disconnect\",\n    \"disconnecting\",\n    \"newListener\",\n    \"removeListener\", // used by the Node.js EventEmitter\n];\n/**\n * Protocol version.\n *\n * @public\n */\nexport const protocol = 5;\nexport var PacketType;\n(function (PacketType) {\n    PacketType[PacketType[\"CONNECT\"] = 0] = \"CONNECT\";\n    PacketType[PacketType[\"DISCONNECT\"] = 1] = \"DISCONNECT\";\n    PacketType[PacketType[\"EVENT\"] = 2] = \"EVENT\";\n    PacketType[PacketType[\"ACK\"] = 3] = \"ACK\";\n    PacketType[PacketType[\"CONNECT_ERROR\"] = 4] = \"CONNECT_ERROR\";\n    PacketType[PacketType[\"BINARY_EVENT\"] = 5] = \"BINARY_EVENT\";\n    PacketType[PacketType[\"BINARY_ACK\"] = 6] = \"BINARY_ACK\";\n})(PacketType || (PacketType = {}));\n/**\n * A socket.io Encoder instance\n */\nexport class Encoder {\n    /**\n     * Encoder constructor\n     *\n     * @param {function} replacer - custom replacer to pass down to JSON.parse\n     */\n    constructor(replacer) {\n        this.replacer = replacer;\n    }\n    /**\n     * Encode a packet as a single string if non-binary, or as a\n     * buffer sequence, depending on packet type.\n     *\n     * @param {Object} obj - packet object\n     */\n    encode(obj) {\n        if (obj.type === PacketType.EVENT || obj.type === PacketType.ACK) {\n            if (hasBinary(obj)) {\n                return this.encodeAsBinary({\n                    type: obj.type === PacketType.EVENT\n                        ? PacketType.BINARY_EVENT\n                        : PacketType.BINARY_ACK,\n                    nsp: obj.nsp,\n                    data: obj.data,\n                    id: obj.id,\n                });\n            }\n        }\n        return [this.encodeAsString(obj)];\n    }\n    /**\n     * Encode packet as string.\n     */\n    encodeAsString(obj) {\n        // first is type\n        let str = \"\" + obj.type;\n        // attachments if we have them\n        if (obj.type === PacketType.BINARY_EVENT ||\n            obj.type === PacketType.BINARY_ACK) {\n            str += obj.attachments + \"-\";\n        }\n        // if we have a namespace other than `/`\n        // we append it followed by a comma `,`\n        if (obj.nsp && \"/\" !== obj.nsp) {\n            str += obj.nsp + \",\";\n        }\n        // immediately followed by the id\n        if (null != obj.id) {\n            str += obj.id;\n        }\n        // json data\n        if (null != obj.data) {\n            str += JSON.stringify(obj.data, this.replacer);\n        }\n        return str;\n    }\n    /**\n     * Encode packet as 'buffer sequence' by removing blobs, and\n     * deconstructing packet into object with placeholders and\n     * a list of buffers.\n     */\n    encodeAsBinary(obj) {\n        const deconstruction = deconstructPacket(obj);\n        const pack = this.encodeAsString(deconstruction.packet);\n        const buffers = deconstruction.buffers;\n        buffers.unshift(pack); // add packet info to beginning of data list\n        return buffers; // write all the buffers\n    }\n}\n// see https://stackoverflow.com/questions/8511281/check-if-a-value-is-an-object-in-javascript\nfunction isObject(value) {\n    return Object.prototype.toString.call(value) === \"[object Object]\";\n}\n/**\n * A socket.io Decoder instance\n *\n * @return {Object} decoder\n */\nexport class Decoder extends Emitter {\n    /**\n     * Decoder constructor\n     *\n     * @param {function} reviver - custom reviver to pass down to JSON.stringify\n     */\n    constructor(reviver) {\n        super();\n        this.reviver = reviver;\n    }\n    /**\n     * Decodes an encoded packet string into packet JSON.\n     *\n     * @param {String} obj - encoded packet\n     */\n    add(obj) {\n        let packet;\n        if (typeof obj === \"string\") {\n            if (this.reconstructor) {\n                throw new Error(\"got plaintext data when reconstructing a packet\");\n            }\n            packet = this.decodeString(obj);\n            const isBinaryEvent = packet.type === PacketType.BINARY_EVENT;\n            if (isBinaryEvent || packet.type === PacketType.BINARY_ACK) {\n                packet.type = isBinaryEvent ? PacketType.EVENT : PacketType.ACK;\n                // binary packet's json\n                this.reconstructor = new BinaryReconstructor(packet);\n                // no attachments, labeled binary but no binary data to follow\n                if (packet.attachments === 0) {\n                    super.emitReserved(\"decoded\", packet);\n                }\n            }\n            else {\n                // non-binary full packet\n                super.emitReserved(\"decoded\", packet);\n            }\n        }\n        else if (isBinary(obj) || obj.base64) {\n            // raw binary data\n            if (!this.reconstructor) {\n                throw new Error(\"got binary data when not reconstructing a packet\");\n            }\n            else {\n                packet = this.reconstructor.takeBinaryData(obj);\n                if (packet) {\n                    // received final buffer\n                    this.reconstructor = null;\n                    super.emitReserved(\"decoded\", packet);\n                }\n            }\n        }\n        else {\n            throw new Error(\"Unknown type: \" + obj);\n        }\n    }\n    /**\n     * Decode a packet String (JSON data)\n     *\n     * @param {String} str\n     * @return {Object} packet\n     */\n    decodeString(str) {\n        let i = 0;\n        // look up type\n        const p = {\n            type: Number(str.charAt(0)),\n        };\n        if (PacketType[p.type] === undefined) {\n            throw new Error(\"unknown packet type \" + p.type);\n        }\n        // look up attachments if type binary\n        if (p.type === PacketType.BINARY_EVENT ||\n            p.type === PacketType.BINARY_ACK) {\n            const start = i + 1;\n            while (str.charAt(++i) !== \"-\" && i != str.length) { }\n            const buf = str.substring(start, i);\n            if (buf != Number(buf) || str.charAt(i) !== \"-\") {\n                throw new Error(\"Illegal attachments\");\n            }\n            p.attachments = Number(buf);\n        }\n        // look up namespace (if any)\n        if (\"/\" === str.charAt(i + 1)) {\n            const start = i + 1;\n            while (++i) {\n                const c = str.charAt(i);\n                if (\",\" === c)\n                    break;\n                if (i === str.length)\n                    break;\n            }\n            p.nsp = str.substring(start, i);\n        }\n        else {\n            p.nsp = \"/\";\n        }\n        // look up id\n        const next = str.charAt(i + 1);\n        if (\"\" !== next && Number(next) == next) {\n            const start = i + 1;\n            while (++i) {\n                const c = str.charAt(i);\n                if (null == c || Number(c) != c) {\n                    --i;\n                    break;\n                }\n                if (i === str.length)\n                    break;\n            }\n            p.id = Number(str.substring(start, i + 1));\n        }\n        // look up json data\n        if (str.charAt(++i)) {\n            const payload = this.tryParse(str.substr(i));\n            if (Decoder.isPayloadValid(p.type, payload)) {\n                p.data = payload;\n            }\n            else {\n                throw new Error(\"invalid payload\");\n            }\n        }\n        return p;\n    }\n    tryParse(str) {\n        try {\n            return JSON.parse(str, this.reviver);\n        }\n        catch (e) {\n            return false;\n        }\n    }\n    static isPayloadValid(type, payload) {\n        switch (type) {\n            case PacketType.CONNECT:\n                return isObject(payload);\n            case PacketType.DISCONNECT:\n                return payload === undefined;\n            case PacketType.CONNECT_ERROR:\n                return typeof payload === \"string\" || isObject(payload);\n            case PacketType.EVENT:\n            case PacketType.BINARY_EVENT:\n                return (Array.isArray(payload) &&\n                    (typeof payload[0] === \"number\" ||\n                        (typeof payload[0] === \"string\" &&\n                            RESERVED_EVENTS.indexOf(payload[0]) === -1)));\n            case PacketType.ACK:\n            case PacketType.BINARY_ACK:\n                return Array.isArray(payload);\n        }\n    }\n    /**\n     * Deallocates a parser's resources\n     */\n    destroy() {\n        if (this.reconstructor) {\n            this.reconstructor.finishedReconstruction();\n            this.reconstructor = null;\n        }\n    }\n}\n/**\n * A manager of a binary event's 'buffer sequence'. Should\n * be constructed whenever a packet of type BINARY_EVENT is\n * decoded.\n *\n * @param {Object} packet\n * @return {BinaryReconstructor} initialized reconstructor\n */\nclass BinaryReconstructor {\n    constructor(packet) {\n        this.packet = packet;\n        this.buffers = [];\n        this.reconPack = packet;\n    }\n    /**\n     * Method to be called when binary data received from connection\n     * after a BINARY_EVENT packet.\n     *\n     * @param {Buffer | ArrayBuffer} binData - the raw binary data received\n     * @return {null | Object} returns null if more binary data is expected or\n     *   a reconstructed packet object if all buffers have been received.\n     */\n    takeBinaryData(binData) {\n        this.buffers.push(binData);\n        if (this.buffers.length === this.reconPack.attachments) {\n            // done with buffer list\n            const packet = reconstructPacket(this.reconPack, this.buffers);\n            this.finishedReconstruction();\n            return packet;\n        }\n        return null;\n    }\n    /**\n     * Cleans up binary packet reconstruction variables.\n     */\n    finishedReconstruction() {\n        this.reconPack = null;\n        this.buffers = [];\n    }\n}\n","export function on(obj, ev, fn) {\n    obj.on(ev, fn);\n    return function subDestroy() {\n        obj.off(ev, fn);\n    };\n}\n","import { PacketType } from \"socket.io-parser\";\nimport { on } from \"./on.js\";\nimport { Emitter, } from \"@socket.io/component-emitter\";\n/**\n * Internal events.\n * These events can't be emitted by the user.\n */\nconst RESERVED_EVENTS = Object.freeze({\n    connect: 1,\n    connect_error: 1,\n    disconnect: 1,\n    disconnecting: 1,\n    // EventEmitter reserved events: https://nodejs.org/api/events.html#events_event_newlistener\n    newListener: 1,\n    removeListener: 1,\n});\n/**\n * A Socket is the fundamental class for interacting with the server.\n *\n * A Socket belongs to a certain Namespace (by default /) and uses an underlying {@link Manager} to communicate.\n *\n * @example\n * const socket = io();\n *\n * socket.on(\"connect\", () => {\n *   console.log(\"connected\");\n * });\n *\n * // send an event to the server\n * socket.emit(\"foo\", \"bar\");\n *\n * socket.on(\"foobar\", () => {\n *   // an event was received from the server\n * });\n *\n * // upon disconnection\n * socket.on(\"disconnect\", (reason) => {\n *   console.log(`disconnected due to ${reason}`);\n * });\n */\nexport class Socket extends Emitter {\n    /**\n     * `Socket` constructor.\n     */\n    constructor(io, nsp, opts) {\n        super();\n        /**\n         * Whether the socket is currently connected to the server.\n         *\n         * @example\n         * const socket = io();\n         *\n         * socket.on(\"connect\", () => {\n         *   console.log(socket.connected); // true\n         * });\n         *\n         * socket.on(\"disconnect\", () => {\n         *   console.log(socket.connected); // false\n         * });\n         */\n        this.connected = false;\n        /**\n         * Whether the connection state was recovered after a temporary disconnection. In that case, any missed packets will\n         * be transmitted by the server.\n         */\n        this.recovered = false;\n        /**\n         * Buffer for packets received before the CONNECT packet\n         */\n        this.receiveBuffer = [];\n        /**\n         * Buffer for packets that will be sent once the socket is connected\n         */\n        this.sendBuffer = [];\n        /**\n         * The queue of packets to be sent with retry in case of failure.\n         *\n         * Packets are sent one by one, each waiting for the server acknowledgement, in order to guarantee the delivery order.\n         * @private\n         */\n        this._queue = [];\n        /**\n         * A sequence to generate the ID of the {@link QueuedPacket}.\n         * @private\n         */\n        this._queueSeq = 0;\n        this.ids = 0;\n        this.acks = {};\n        this.flags = {};\n        this.io = io;\n        this.nsp = nsp;\n        if (opts && opts.auth) {\n            this.auth = opts.auth;\n        }\n        this._opts = Object.assign({}, opts);\n        if (this.io._autoConnect)\n            this.open();\n    }\n    /**\n     * Whether the socket is currently disconnected\n     *\n     * @example\n     * const socket = io();\n     *\n     * socket.on(\"connect\", () => {\n     *   console.log(socket.disconnected); // false\n     * });\n     *\n     * socket.on(\"disconnect\", () => {\n     *   console.log(socket.disconnected); // true\n     * });\n     */\n    get disconnected() {\n        return !this.connected;\n    }\n    /**\n     * Subscribe to open, close and packet events\n     *\n     * @private\n     */\n    subEvents() {\n        if (this.subs)\n            return;\n        const io = this.io;\n        this.subs = [\n            on(io, \"open\", this.onopen.bind(this)),\n            on(io, \"packet\", this.onpacket.bind(this)),\n            on(io, \"error\", this.onerror.bind(this)),\n            on(io, \"close\", this.onclose.bind(this)),\n        ];\n    }\n    /**\n     * Whether the Socket will try to reconnect when its Manager connects or reconnects.\n     *\n     * @example\n     * const socket = io();\n     *\n     * console.log(socket.active); // true\n     *\n     * socket.on(\"disconnect\", (reason) => {\n     *   if (reason === \"io server disconnect\") {\n     *     // the disconnection was initiated by the server, you need to manually reconnect\n     *     console.log(socket.active); // false\n     *   }\n     *   // else the socket will automatically try to reconnect\n     *   console.log(socket.active); // true\n     * });\n     */\n    get active() {\n        return !!this.subs;\n    }\n    /**\n     * \"Opens\" the socket.\n     *\n     * @example\n     * const socket = io({\n     *   autoConnect: false\n     * });\n     *\n     * socket.connect();\n     */\n    connect() {\n        if (this.connected)\n            return this;\n        this.subEvents();\n        if (!this.io[\"_reconnecting\"])\n            this.io.open(); // ensure open\n        if (\"open\" === this.io._readyState)\n            this.onopen();\n        return this;\n    }\n    /**\n     * Alias for {@link connect()}.\n     */\n    open() {\n        return this.connect();\n    }\n    /**\n     * Sends a `message` event.\n     *\n     * This method mimics the WebSocket.send() method.\n     *\n     * @see https://developer.mozilla.org/en-US/docs/Web/API/WebSocket/send\n     *\n     * @example\n     * socket.send(\"hello\");\n     *\n     * // this is equivalent to\n     * socket.emit(\"message\", \"hello\");\n     *\n     * @return self\n     */\n    send(...args) {\n        args.unshift(\"message\");\n        this.emit.apply(this, args);\n        return this;\n    }\n    /**\n     * Override `emit`.\n     * If the event is in `events`, it's emitted normally.\n     *\n     * @example\n     * socket.emit(\"hello\", \"world\");\n     *\n     * // all serializable datastructures are supported (no need to call JSON.stringify)\n     * socket.emit(\"hello\", 1, \"2\", { 3: [\"4\"], 5: Uint8Array.from([6]) });\n     *\n     * // with an acknowledgement from the server\n     * socket.emit(\"hello\", \"world\", (val) => {\n     *   // ...\n     * });\n     *\n     * @return self\n     */\n    emit(ev, ...args) {\n        if (RESERVED_EVENTS.hasOwnProperty(ev)) {\n            throw new Error('\"' + ev.toString() + '\" is a reserved event name');\n        }\n        args.unshift(ev);\n        if (this._opts.retries && !this.flags.fromQueue && !this.flags.volatile) {\n            this._addToQueue(args);\n            return this;\n        }\n        const packet = {\n            type: PacketType.EVENT,\n            data: args,\n        };\n        packet.options = {};\n        packet.options.compress = this.flags.compress !== false;\n        // event ack callback\n        if (\"function\" === typeof args[args.length - 1]) {\n            const id = this.ids++;\n            const ack = args.pop();\n            this._registerAckCallback(id, ack);\n            packet.id = id;\n        }\n        const isTransportWritable = this.io.engine &&\n            this.io.engine.transport &&\n            this.io.engine.transport.writable;\n        const discardPacket = this.flags.volatile && (!isTransportWritable || !this.connected);\n        if (discardPacket) {\n        }\n        else if (this.connected) {\n            this.notifyOutgoingListeners(packet);\n            this.packet(packet);\n        }\n        else {\n            this.sendBuffer.push(packet);\n        }\n        this.flags = {};\n        return this;\n    }\n    /**\n     * @private\n     */\n    _registerAckCallback(id, ack) {\n        var _a;\n        const timeout = (_a = this.flags.timeout) !== null && _a !== void 0 ? _a : this._opts.ackTimeout;\n        if (timeout === undefined) {\n            this.acks[id] = ack;\n            return;\n        }\n        // @ts-ignore\n        const timer = this.io.setTimeoutFn(() => {\n            delete this.acks[id];\n            for (let i = 0; i < this.sendBuffer.length; i++) {\n                if (this.sendBuffer[i].id === id) {\n                    this.sendBuffer.splice(i, 1);\n                }\n            }\n            ack.call(this, new Error(\"operation has timed out\"));\n        }, timeout);\n        this.acks[id] = (...args) => {\n            // @ts-ignore\n            this.io.clearTimeoutFn(timer);\n            ack.apply(this, [null, ...args]);\n        };\n    }\n    /**\n     * Emits an event and waits for an acknowledgement\n     *\n     * @example\n     * // without timeout\n     * const response = await socket.emitWithAck(\"hello\", \"world\");\n     *\n     * // with a specific timeout\n     * try {\n     *   const response = await socket.timeout(1000).emitWithAck(\"hello\", \"world\");\n     * } catch (err) {\n     *   // the server did not acknowledge the event in the given delay\n     * }\n     *\n     * @return a Promise that will be fulfilled when the server acknowledges the event\n     */\n    emitWithAck(ev, ...args) {\n        // the timeout flag is optional\n        const withErr = this.flags.timeout !== undefined || this._opts.ackTimeout !== undefined;\n        return new Promise((resolve, reject) => {\n            args.push((arg1, arg2) => {\n                if (withErr) {\n                    return arg1 ? reject(arg1) : resolve(arg2);\n                }\n                else {\n                    return resolve(arg1);\n                }\n            });\n            this.emit(ev, ...args);\n        });\n    }\n    /**\n     * Add the packet to the queue.\n     * @param args\n     * @private\n     */\n    _addToQueue(args) {\n        let ack;\n        if (typeof args[args.length - 1] === \"function\") {\n            ack = args.pop();\n        }\n        const packet = {\n            id: this._queueSeq++,\n            tryCount: 0,\n            pending: false,\n            args,\n            flags: Object.assign({ fromQueue: true }, this.flags),\n        };\n        args.push((err, ...responseArgs) => {\n            if (packet !== this._queue[0]) {\n                // the packet has already been acknowledged\n                return;\n            }\n            const hasError = err !== null;\n            if (hasError) {\n                if (packet.tryCount > this._opts.retries) {\n                    this._queue.shift();\n                    if (ack) {\n                        ack(err);\n                    }\n                }\n            }\n            else {\n                this._queue.shift();\n                if (ack) {\n                    ack(null, ...responseArgs);\n                }\n            }\n            packet.pending = false;\n            return this._drainQueue();\n        });\n        this._queue.push(packet);\n        this._drainQueue();\n    }\n    /**\n     * Send the first packet of the queue, and wait for an acknowledgement from the server.\n     * @param force - whether to resend a packet that has not been acknowledged yet\n     *\n     * @private\n     */\n    _drainQueue(force = false) {\n        if (!this.connected || this._queue.length === 0) {\n            return;\n        }\n        const packet = this._queue[0];\n        if (packet.pending && !force) {\n            return;\n        }\n        packet.pending = true;\n        packet.tryCount++;\n        this.flags = packet.flags;\n        this.emit.apply(this, packet.args);\n    }\n    /**\n     * Sends a packet.\n     *\n     * @param packet\n     * @private\n     */\n    packet(packet) {\n        packet.nsp = this.nsp;\n        this.io._packet(packet);\n    }\n    /**\n     * Called upon engine `open`.\n     *\n     * @private\n     */\n    onopen() {\n        if (typeof this.auth == \"function\") {\n            this.auth((data) => {\n                this._sendConnectPacket(data);\n            });\n        }\n        else {\n            this._sendConnectPacket(this.auth);\n        }\n    }\n    /**\n     * Sends a CONNECT packet to initiate the Socket.IO session.\n     *\n     * @param data\n     * @private\n     */\n    _sendConnectPacket(data) {\n        this.packet({\n            type: PacketType.CONNECT,\n            data: this._pid\n                ? Object.assign({ pid: this._pid, offset: this._lastOffset }, data)\n                : data,\n        });\n    }\n    /**\n     * Called upon engine or manager `error`.\n     *\n     * @param err\n     * @private\n     */\n    onerror(err) {\n        if (!this.connected) {\n            this.emitReserved(\"connect_error\", err);\n        }\n    }\n    /**\n     * Called upon engine `close`.\n     *\n     * @param reason\n     * @param description\n     * @private\n     */\n    onclose(reason, description) {\n        this.connected = false;\n        delete this.id;\n        this.emitReserved(\"disconnect\", reason, description);\n    }\n    /**\n     * Called with socket packet.\n     *\n     * @param packet\n     * @private\n     */\n    onpacket(packet) {\n        const sameNamespace = packet.nsp === this.nsp;\n        if (!sameNamespace)\n            return;\n        switch (packet.type) {\n            case PacketType.CONNECT:\n                if (packet.data && packet.data.sid) {\n                    this.onconnect(packet.data.sid, packet.data.pid);\n                }\n                else {\n                    this.emitReserved(\"connect_error\", new Error(\"It seems you are trying to reach a Socket.IO server in v2.x with a v3.x client, but they are not compatible (more information here: https://socket.io/docs/v3/migrating-from-2-x-to-3-0/)\"));\n                }\n                break;\n            case PacketType.EVENT:\n            case PacketType.BINARY_EVENT:\n                this.onevent(packet);\n                break;\n            case PacketType.ACK:\n            case PacketType.BINARY_ACK:\n                this.onack(packet);\n                break;\n            case PacketType.DISCONNECT:\n                this.ondisconnect();\n                break;\n            case PacketType.CONNECT_ERROR:\n                this.destroy();\n                const err = new Error(packet.data.message);\n                // @ts-ignore\n                err.data = packet.data.data;\n                this.emitReserved(\"connect_error\", err);\n                break;\n        }\n    }\n    /**\n     * Called upon a server event.\n     *\n     * @param packet\n     * @private\n     */\n    onevent(packet) {\n        const args = packet.data || [];\n        if (null != packet.id) {\n            args.push(this.ack(packet.id));\n        }\n        if (this.connected) {\n            this.emitEvent(args);\n        }\n        else {\n            this.receiveBuffer.push(Object.freeze(args));\n        }\n    }\n    emitEvent(args) {\n        if (this._anyListeners && this._anyListeners.length) {\n            const listeners = this._anyListeners.slice();\n            for (const listener of listeners) {\n                listener.apply(this, args);\n            }\n        }\n        super.emit.apply(this, args);\n        if (this._pid && args.length && typeof args[args.length - 1] === \"string\") {\n            this._lastOffset = args[args.length - 1];\n        }\n    }\n    /**\n     * Produces an ack callback to emit with an event.\n     *\n     * @private\n     */\n    ack(id) {\n        const self = this;\n        let sent = false;\n        return function (...args) {\n            // prevent double callbacks\n            if (sent)\n                return;\n            sent = true;\n            self.packet({\n                type: PacketType.ACK,\n                id: id,\n                data: args,\n            });\n        };\n    }\n    /**\n     * Called upon a server acknowlegement.\n     *\n     * @param packet\n     * @private\n     */\n    onack(packet) {\n        const ack = this.acks[packet.id];\n        if (\"function\" === typeof ack) {\n            ack.apply(this, packet.data);\n            delete this.acks[packet.id];\n        }\n        else {\n        }\n    }\n    /**\n     * Called upon server connect.\n     *\n     * @private\n     */\n    onconnect(id, pid) {\n        this.id = id;\n        this.recovered = pid && this._pid === pid;\n        this._pid = pid; // defined only if connection state recovery is enabled\n        this.connected = true;\n        this.emitBuffered();\n        this.emitReserved(\"connect\");\n        this._drainQueue(true);\n    }\n    /**\n     * Emit buffered events (received and emitted).\n     *\n     * @private\n     */\n    emitBuffered() {\n        this.receiveBuffer.forEach((args) => this.emitEvent(args));\n        this.receiveBuffer = [];\n        this.sendBuffer.forEach((packet) => {\n            this.notifyOutgoingListeners(packet);\n            this.packet(packet);\n        });\n        this.sendBuffer = [];\n    }\n    /**\n     * Called upon server disconnect.\n     *\n     * @private\n     */\n    ondisconnect() {\n        this.destroy();\n        this.onclose(\"io server disconnect\");\n    }\n    /**\n     * Called upon forced client/server side disconnections,\n     * this method ensures the manager stops tracking us and\n     * that reconnections don't get triggered for this.\n     *\n     * @private\n     */\n    destroy() {\n        if (this.subs) {\n            // clean subscriptions to avoid reconnections\n            this.subs.forEach((subDestroy) => subDestroy());\n            this.subs = undefined;\n        }\n        this.io[\"_destroy\"](this);\n    }\n    /**\n     * Disconnects the socket manually. In that case, the socket will not try to reconnect.\n     *\n     * If this is the last active Socket instance of the {@link Manager}, the low-level connection will be closed.\n     *\n     * @example\n     * const socket = io();\n     *\n     * socket.on(\"disconnect\", (reason) => {\n     *   // console.log(reason); prints \"io client disconnect\"\n     * });\n     *\n     * socket.disconnect();\n     *\n     * @return self\n     */\n    disconnect() {\n        if (this.connected) {\n            this.packet({ type: PacketType.DISCONNECT });\n        }\n        // remove socket from pool\n        this.destroy();\n        if (this.connected) {\n            // fire events\n            this.onclose(\"io client disconnect\");\n        }\n        return this;\n    }\n    /**\n     * Alias for {@link disconnect()}.\n     *\n     * @return self\n     */\n    close() {\n        return this.disconnect();\n    }\n    /**\n     * Sets the compress flag.\n     *\n     * @example\n     * socket.compress(false).emit(\"hello\");\n     *\n     * @param compress - if `true`, compresses the sending data\n     * @return self\n     */\n    compress(compress) {\n        this.flags.compress = compress;\n        return this;\n    }\n    /**\n     * Sets a modifier for a subsequent event emission that the event message will be dropped when this socket is not\n     * ready to send messages.\n     *\n     * @example\n     * socket.volatile.emit(\"hello\"); // the server may or may not receive it\n     *\n     * @returns self\n     */\n    get volatile() {\n        this.flags.volatile = true;\n        return this;\n    }\n    /**\n     * Sets a modifier for a subsequent event emission that the callback will be called with an error when the\n     * given number of milliseconds have elapsed without an acknowledgement from the server:\n     *\n     * @example\n     * socket.timeout(5000).emit(\"my-event\", (err) => {\n     *   if (err) {\n     *     // the server did not acknowledge the event in the given delay\n     *   }\n     * });\n     *\n     * @returns self\n     */\n    timeout(timeout) {\n        this.flags.timeout = timeout;\n        return this;\n    }\n    /**\n     * Adds a listener that will be fired when any event is emitted. The event name is passed as the first argument to the\n     * callback.\n     *\n     * @example\n     * socket.onAny((event, ...args) => {\n     *   console.log(`got ${event}`);\n     * });\n     *\n     * @param listener\n     */\n    onAny(listener) {\n        this._anyListeners = this._anyListeners || [];\n        this._anyListeners.push(listener);\n        return this;\n    }\n    /**\n     * Adds a listener that will be fired when any event is emitted. The event name is passed as the first argument to the\n     * callback. The listener is added to the beginning of the listeners array.\n     *\n     * @example\n     * socket.prependAny((event, ...args) => {\n     *   console.log(`got event ${event}`);\n     * });\n     *\n     * @param listener\n     */\n    prependAny(listener) {\n        this._anyListeners = this._anyListeners || [];\n        this._anyListeners.unshift(listener);\n        return this;\n    }\n    /**\n     * Removes the listener that will be fired when any event is emitted.\n     *\n     * @example\n     * const catchAllListener = (event, ...args) => {\n     *   console.log(`got event ${event}`);\n     * }\n     *\n     * socket.onAny(catchAllListener);\n     *\n     * // remove a specific listener\n     * socket.offAny(catchAllListener);\n     *\n     * // or remove all listeners\n     * socket.offAny();\n     *\n     * @param listener\n     */\n    offAny(listener) {\n        if (!this._anyListeners) {\n            return this;\n        }\n        if (listener) {\n            const listeners = this._anyListeners;\n            for (let i = 0; i < listeners.length; i++) {\n                if (listener === listeners[i]) {\n                    listeners.splice(i, 1);\n                    return this;\n                }\n            }\n        }\n        else {\n            this._anyListeners = [];\n        }\n        return this;\n    }\n    /**\n     * Returns an array of listeners that are listening for any event that is specified. This array can be manipulated,\n     * e.g. to remove listeners.\n     */\n    listenersAny() {\n        return this._anyListeners || [];\n    }\n    /**\n     * Adds a listener that will be fired when any event is emitted. The event name is passed as the first argument to the\n     * callback.\n     *\n     * Note: acknowledgements sent to the server are not included.\n     *\n     * @example\n     * socket.onAnyOutgoing((event, ...args) => {\n     *   console.log(`sent event ${event}`);\n     * });\n     *\n     * @param listener\n     */\n    onAnyOutgoing(listener) {\n        this._anyOutgoingListeners = this._anyOutgoingListeners || [];\n        this._anyOutgoingListeners.push(listener);\n        return this;\n    }\n    /**\n     * Adds a listener that will be fired when any event is emitted. The event name is passed as the first argument to the\n     * callback. The listener is added to the beginning of the listeners array.\n     *\n     * Note: acknowledgements sent to the server are not included.\n     *\n     * @example\n     * socket.prependAnyOutgoing((event, ...args) => {\n     *   console.log(`sent event ${event}`);\n     * });\n     *\n     * @param listener\n     */\n    prependAnyOutgoing(listener) {\n        this._anyOutgoingListeners = this._anyOutgoingListeners || [];\n        this._anyOutgoingListeners.unshift(listener);\n        return this;\n    }\n    /**\n     * Removes the listener that will be fired when any event is emitted.\n     *\n     * @example\n     * const catchAllListener = (event, ...args) => {\n     *   console.log(`sent event ${event}`);\n     * }\n     *\n     * socket.onAnyOutgoing(catchAllListener);\n     *\n     * // remove a specific listener\n     * socket.offAnyOutgoing(catchAllListener);\n     *\n     * // or remove all listeners\n     * socket.offAnyOutgoing();\n     *\n     * @param [listener] - the catch-all listener (optional)\n     */\n    offAnyOutgoing(listener) {\n        if (!this._anyOutgoingListeners) {\n            return this;\n        }\n        if (listener) {\n            const listeners = this._anyOutgoingListeners;\n            for (let i = 0; i < listeners.length; i++) {\n                if (listener === listeners[i]) {\n                    listeners.splice(i, 1);\n                    return this;\n                }\n            }\n        }\n        else {\n            this._anyOutgoingListeners = [];\n        }\n        return this;\n    }\n    /**\n     * Returns an array of listeners that are listening for any event that is specified. This array can be manipulated,\n     * e.g. to remove listeners.\n     */\n    listenersAnyOutgoing() {\n        return this._anyOutgoingListeners || [];\n    }\n    /**\n     * Notify the listeners for each packet sent\n     *\n     * @param packet\n     *\n     * @private\n     */\n    notifyOutgoingListeners(packet) {\n        if (this._anyOutgoingListeners && this._anyOutgoingListeners.length) {\n            const listeners = this._anyOutgoingListeners.slice();\n            for (const listener of listeners) {\n                listener.apply(this, packet.data);\n            }\n        }\n    }\n}\n","/**\n * Initialize backoff timer with `opts`.\n *\n * - `min` initial timeout in milliseconds [100]\n * - `max` max timeout [10000]\n * - `jitter` [0]\n * - `factor` [2]\n *\n * @param {Object} opts\n * @api public\n */\nexport function Backoff(opts) {\n    opts = opts || {};\n    this.ms = opts.min || 100;\n    this.max = opts.max || 10000;\n    this.factor = opts.factor || 2;\n    this.jitter = opts.jitter > 0 && opts.jitter <= 1 ? opts.jitter : 0;\n    this.attempts = 0;\n}\n/**\n * Return the backoff duration.\n *\n * @return {Number}\n * @api public\n */\nBackoff.prototype.duration = function () {\n    var ms = this.ms * Math.pow(this.factor, this.attempts++);\n    if (this.jitter) {\n        var rand = Math.random();\n        var deviation = Math.floor(rand * this.jitter * ms);\n        ms = (Math.floor(rand * 10) & 1) == 0 ? ms - deviation : ms + deviation;\n    }\n    return Math.min(ms, this.max) | 0;\n};\n/**\n * Reset the number of attempts.\n *\n * @api public\n */\nBackoff.prototype.reset = function () {\n    this.attempts = 0;\n};\n/**\n * Set the minimum duration\n *\n * @api public\n */\nBackoff.prototype.setMin = function (min) {\n    this.ms = min;\n};\n/**\n * Set the maximum duration\n *\n * @api public\n */\nBackoff.prototype.setMax = function (max) {\n    this.max = max;\n};\n/**\n * Set the jitter\n *\n * @api public\n */\nBackoff.prototype.setJitter = function (jitter) {\n    this.jitter = jitter;\n};\n","import { Socket as Engine, installTimerFunctions, nextTick, } from \"engine.io-client\";\nimport { Socket } from \"./socket.js\";\nimport * as parser from \"socket.io-parser\";\nimport { on } from \"./on.js\";\nimport { Backoff } from \"./contrib/backo2.js\";\nimport { Emitter, } from \"@socket.io/component-emitter\";\nexport class Manager extends Emitter {\n    constructor(uri, opts) {\n        var _a;\n        super();\n        this.nsps = {};\n        this.subs = [];\n        if (uri && \"object\" === typeof uri) {\n            opts = uri;\n            uri = undefined;\n        }\n        opts = opts || {};\n        opts.path = opts.path || \"/socket.io\";\n        this.opts = opts;\n        installTimerFunctions(this, opts);\n        this.reconnection(opts.reconnection !== false);\n        this.reconnectionAttempts(opts.reconnectionAttempts || Infinity);\n        this.reconnectionDelay(opts.reconnectionDelay || 1000);\n        this.reconnectionDelayMax(opts.reconnectionDelayMax || 5000);\n        this.randomizationFactor((_a = opts.randomizationFactor) !== null && _a !== void 0 ? _a : 0.5);\n        this.backoff = new Backoff({\n            min: this.reconnectionDelay(),\n            max: this.reconnectionDelayMax(),\n            jitter: this.randomizationFactor(),\n        });\n        this.timeout(null == opts.timeout ? 20000 : opts.timeout);\n        this._readyState = \"closed\";\n        this.uri = uri;\n        const _parser = opts.parser || parser;\n        this.encoder = new _parser.Encoder();\n        this.decoder = new _parser.Decoder();\n        this._autoConnect = opts.autoConnect !== false;\n        if (this._autoConnect)\n            this.open();\n    }\n    reconnection(v) {\n        if (!arguments.length)\n            return this._reconnection;\n        this._reconnection = !!v;\n        return this;\n    }\n    reconnectionAttempts(v) {\n        if (v === undefined)\n            return this._reconnectionAttempts;\n        this._reconnectionAttempts = v;\n        return this;\n    }\n    reconnectionDelay(v) {\n        var _a;\n        if (v === undefined)\n            return this._reconnectionDelay;\n        this._reconnectionDelay = v;\n        (_a = this.backoff) === null || _a === void 0 ? void 0 : _a.setMin(v);\n        return this;\n    }\n    randomizationFactor(v) {\n        var _a;\n        if (v === undefined)\n            return this._randomizationFactor;\n        this._randomizationFactor = v;\n        (_a = this.backoff) === null || _a === void 0 ? void 0 : _a.setJitter(v);\n        return this;\n    }\n    reconnectionDelayMax(v) {\n        var _a;\n        if (v === undefined)\n            return this._reconnectionDelayMax;\n        this._reconnectionDelayMax = v;\n        (_a = this.backoff) === null || _a === void 0 ? void 0 : _a.setMax(v);\n        return this;\n    }\n    timeout(v) {\n        if (!arguments.length)\n            return this._timeout;\n        this._timeout = v;\n        return this;\n    }\n    /**\n     * Starts trying to reconnect if reconnection is enabled and we have not\n     * started reconnecting yet\n     *\n     * @private\n     */\n    maybeReconnectOnOpen() {\n        // Only try to reconnect if it's the first time we're connecting\n        if (!this._reconnecting &&\n            this._reconnection &&\n            this.backoff.attempts === 0) {\n            // keeps reconnection from firing twice for the same reconnection loop\n            this.reconnect();\n        }\n    }\n    /**\n     * Sets the current transport `socket`.\n     *\n     * @param {Function} fn - optional, callback\n     * @return self\n     * @public\n     */\n    open(fn) {\n        if (~this._readyState.indexOf(\"open\"))\n            return this;\n        this.engine = new Engine(this.uri, this.opts);\n        const socket = this.engine;\n        const self = this;\n        this._readyState = \"opening\";\n        this.skipReconnect = false;\n        // emit `open`\n        const openSubDestroy = on(socket, \"open\", function () {\n            self.onopen();\n            fn && fn();\n        });\n        const onError = (err) => {\n            this.cleanup();\n            this._readyState = \"closed\";\n            this.emitReserved(\"error\", err);\n            if (fn) {\n                fn(err);\n            }\n            else {\n                // Only do this if there is no fn to handle the error\n                this.maybeReconnectOnOpen();\n            }\n        };\n        // emit `error`\n        const errorSub = on(socket, \"error\", onError);\n        if (false !== this._timeout) {\n            const timeout = this._timeout;\n            // set timer\n            const timer = this.setTimeoutFn(() => {\n                openSubDestroy();\n                onError(new Error(\"timeout\"));\n                socket.close();\n            }, timeout);\n            if (this.opts.autoUnref) {\n                timer.unref();\n            }\n            this.subs.push(() => {\n                this.clearTimeoutFn(timer);\n            });\n        }\n        this.subs.push(openSubDestroy);\n        this.subs.push(errorSub);\n        return this;\n    }\n    /**\n     * Alias for open()\n     *\n     * @return self\n     * @public\n     */\n    connect(fn) {\n        return this.open(fn);\n    }\n    /**\n     * Called upon transport open.\n     *\n     * @private\n     */\n    onopen() {\n        // clear old subs\n        this.cleanup();\n        // mark as open\n        this._readyState = \"open\";\n        this.emitReserved(\"open\");\n        // add new subs\n        const socket = this.engine;\n        this.subs.push(on(socket, \"ping\", this.onping.bind(this)), on(socket, \"data\", this.ondata.bind(this)), on(socket, \"error\", this.onerror.bind(this)), on(socket, \"close\", this.onclose.bind(this)), on(this.decoder, \"decoded\", this.ondecoded.bind(this)));\n    }\n    /**\n     * Called upon a ping.\n     *\n     * @private\n     */\n    onping() {\n        this.emitReserved(\"ping\");\n    }\n    /**\n     * Called with data.\n     *\n     * @private\n     */\n    ondata(data) {\n        try {\n            this.decoder.add(data);\n        }\n        catch (e) {\n            this.onclose(\"parse error\", e);\n        }\n    }\n    /**\n     * Called when parser fully decodes a packet.\n     *\n     * @private\n     */\n    ondecoded(packet) {\n        // the nextTick call prevents an exception in a user-provided event listener from triggering a disconnection due to a \"parse error\"\n        nextTick(() => {\n            this.emitReserved(\"packet\", packet);\n        }, this.setTimeoutFn);\n    }\n    /**\n     * Called upon socket error.\n     *\n     * @private\n     */\n    onerror(err) {\n        this.emitReserved(\"error\", err);\n    }\n    /**\n     * Creates a new socket for the given `nsp`.\n     *\n     * @return {Socket}\n     * @public\n     */\n    socket(nsp, opts) {\n        let socket = this.nsps[nsp];\n        if (!socket) {\n            socket = new Socket(this, nsp, opts);\n            this.nsps[nsp] = socket;\n        }\n        else if (this._autoConnect && !socket.active) {\n            socket.connect();\n        }\n        return socket;\n    }\n    /**\n     * Called upon a socket close.\n     *\n     * @param socket\n     * @private\n     */\n    _destroy(socket) {\n        const nsps = Object.keys(this.nsps);\n        for (const nsp of nsps) {\n            const socket = this.nsps[nsp];\n            if (socket.active) {\n                return;\n            }\n        }\n        this._close();\n    }\n    /**\n     * Writes a packet.\n     *\n     * @param packet\n     * @private\n     */\n    _packet(packet) {\n        const encodedPackets = this.encoder.encode(packet);\n        for (let i = 0; i < encodedPackets.length; i++) {\n            this.engine.write(encodedPackets[i], packet.options);\n        }\n    }\n    /**\n     * Clean up transport subscriptions and packet buffer.\n     *\n     * @private\n     */\n    cleanup() {\n        this.subs.forEach((subDestroy) => subDestroy());\n        this.subs.length = 0;\n        this.decoder.destroy();\n    }\n    /**\n     * Close the current socket.\n     *\n     * @private\n     */\n    _close() {\n        this.skipReconnect = true;\n        this._reconnecting = false;\n        this.onclose(\"forced close\");\n        if (this.engine)\n            this.engine.close();\n    }\n    /**\n     * Alias for close()\n     *\n     * @private\n     */\n    disconnect() {\n        return this._close();\n    }\n    /**\n     * Called upon engine close.\n     *\n     * @private\n     */\n    onclose(reason, description) {\n        this.cleanup();\n        this.backoff.reset();\n        this._readyState = \"closed\";\n        this.emitReserved(\"close\", reason, description);\n        if (this._reconnection && !this.skipReconnect) {\n            this.reconnect();\n        }\n    }\n    /**\n     * Attempt a reconnection.\n     *\n     * @private\n     */\n    reconnect() {\n        if (this._reconnecting || this.skipReconnect)\n            return this;\n        const self = this;\n        if (this.backoff.attempts >= this._reconnectionAttempts) {\n            this.backoff.reset();\n            this.emitReserved(\"reconnect_failed\");\n            this._reconnecting = false;\n        }\n        else {\n            const delay = this.backoff.duration();\n            this._reconnecting = true;\n            const timer = this.setTimeoutFn(() => {\n                if (self.skipReconnect)\n                    return;\n                this.emitReserved(\"reconnect_attempt\", self.backoff.attempts);\n                // check again for the case socket closed in above events\n                if (self.skipReconnect)\n                    return;\n                self.open((err) => {\n                    if (err) {\n                        self._reconnecting = false;\n                        self.reconnect();\n                        this.emitReserved(\"reconnect_error\", err);\n                    }\n                    else {\n                        self.onreconnect();\n                    }\n                });\n            }, delay);\n            if (this.opts.autoUnref) {\n                timer.unref();\n            }\n            this.subs.push(() => {\n                this.clearTimeoutFn(timer);\n            });\n        }\n    }\n    /**\n     * Called upon successful reconnect.\n     *\n     * @private\n     */\n    onreconnect() {\n        const attempt = this.backoff.attempts;\n        this._reconnecting = false;\n        this.backoff.reset();\n        this.emitReserved(\"reconnect\", attempt);\n    }\n}\n","import { url } from \"./url.js\";\nimport { Manager } from \"./manager.js\";\nimport { Socket } from \"./socket.js\";\n/**\n * Managers cache.\n */\nconst cache = {};\nfunction lookup(uri, opts) {\n    if (typeof uri === \"object\") {\n        opts = uri;\n        uri = undefined;\n    }\n    opts = opts || {};\n    const parsed = url(uri, opts.path || \"/socket.io\");\n    const source = parsed.source;\n    const id = parsed.id;\n    const path = parsed.path;\n    const sameNamespace = cache[id] && path in cache[id][\"nsps\"];\n    const newConnection = opts.forceNew ||\n        opts[\"force new connection\"] ||\n        false === opts.multiplex ||\n        sameNamespace;\n    let io;\n    if (newConnection) {\n        io = new Manager(source, opts);\n    }\n    else {\n        if (!cache[id]) {\n            cache[id] = new Manager(source, opts);\n        }\n        io = cache[id];\n    }\n    if (parsed.query && !opts.query) {\n        opts.query = parsed.queryKey;\n    }\n    return io.socket(parsed.path, opts);\n}\n// so that \"lookup\" can be used both as a function (e.g. `io(...)`) and as a\n// namespace (e.g. `io.connect(...)`), for backward compatibility\nObject.assign(lookup, {\n    Manager,\n    Socket,\n    io: lookup,\n    connect: lookup,\n});\n/**\n * Protocol version.\n *\n * @public\n */\nexport { protocol } from \"socket.io-parser\";\n/**\n * Expose constructors for standalone build.\n *\n * @public\n */\nexport { Manager, Socket, lookup as io, lookup as connect, lookup as default, };\n","import { parse } from \"engine.io-client\";\n/**\n * URL parser.\n *\n * @param uri - url\n * @param path - the request path of the connection\n * @param loc - An object meant to mimic window.location.\n *        Defaults to window.location.\n * @public\n */\nexport function url(uri, path = \"\", loc) {\n    let obj = uri;\n    // default to window.location\n    loc = loc || (typeof location !== \"undefined\" && location);\n    if (null == uri)\n        uri = loc.protocol + \"//\" + loc.host;\n    // relative path support\n    if (typeof uri === \"string\") {\n        if (\"/\" === uri.charAt(0)) {\n            if (\"/\" === uri.charAt(1)) {\n                uri = loc.protocol + uri;\n            }\n            else {\n                uri = loc.host + uri;\n            }\n        }\n        if (!/^(https?|wss?):\\/\\//.test(uri)) {\n            if (\"undefined\" !== typeof loc) {\n                uri = loc.protocol + \"//\" + uri;\n            }\n            else {\n                uri = \"https://\" + uri;\n            }\n        }\n        // parse\n        obj = parse(uri);\n    }\n    // make sure we treat `localhost:80` and `localhost` equally\n    if (!obj.port) {\n        if (/^(http|ws)$/.test(obj.protocol)) {\n            obj.port = \"80\";\n        }\n        else if (/^(http|ws)s$/.test(obj.protocol)) {\n            obj.port = \"443\";\n        }\n    }\n    obj.path = obj.path || \"/\";\n    const ipv6 = obj.host.indexOf(\":\") !== -1;\n    const host = ipv6 ? \"[\" + obj.host + \"]\" : obj.host;\n    // define unique id\n    obj.id = obj.protocol + \"://\" + host + \":\" + obj.port + path;\n    // define href\n    obj.href =\n        obj.protocol +\n            \"://\" +\n            host +\n            (loc && loc.port === obj.port ? \"\" : \":\" + obj.port);\n    return obj;\n}\n"],"names":["PACKET_TYPES","Object","create","PACKET_TYPES_REVERSE","keys","forEach","key","ERROR_PACKET","type","data","withNativeBlob","Blob","prototype","toString","call","withNativeArrayBuffer","ArrayBuffer","isView","obj","buffer","encodePacket","supportsBinary","callback","encodeBlobAsBase64","fileReader","FileReader","onload","content","result","split","readAsDataURL","toArray","Uint8Array","byteOffset","byteLength","TEXT_ENCODER","encodePacketToBinary","packet","arrayBuffer","then","encoded","TextEncoder","encode","chars","lookup","i","charCodeAt","decodePacket","encodedPacket","binaryType","mapBinary","charAt","decodeBase64Packet","substring","length","decoded","base64","encoded1","encoded2","encoded3","encoded4","bufferLength","len","p","arraybuffer","bytes","decode","SEPARATOR","String","fromCharCode","TEXT_DECODER","Emitter","mixin","on","addEventListener","event","fn","this","_callbacks","push","once","off","apply","arguments","removeListener","removeAllListeners","removeEventListener","cb","callbacks","splice","emit","args","Array","slice","emitReserved","listeners","hasListeners","globalThisShim","self","window","Function","pick","attr","reduce","acc","k","hasOwnProperty","NATIVE_SET_TIMEOUT","globalThis","setTimeout","NATIVE_CLEAR_TIMEOUT","clearTimeout","installTimerFunctions","opts","useNativeTimers","setTimeoutFn","bind","clearTimeoutFn","TransportError","Error","constructor","reason","description","context","super","Transport","writable","query","socket","onError","open","readyState","doOpen","close","doClose","onClose","send","packets","write","onOpen","onData","onPacket","details","pause","onPause","createUri","schema","_hostname","_port","path","_query","hostname","indexOf","port","secure","Number","encodedQuery","str","encodeURIComponent","alphabet","map","prev","seed","num","Math","floor","yeast","now","Date","value","XMLHttpRequest","err","hasCORS","XHR","xdomain","e","concat","join","empty","hasXHR2","responseType","Request","uri","method","undefined","_a","xd","xhr","extraHeaders","setDisableHeaderCheck","setRequestHeader","cookieJar","addCookies","withCredentials","requestTimeout","timeout","onreadystatechange","parseCookies","status","onLoad","document","index","requestsCount","requests","cleanup","fromError","abort","responseText","attachEvent","unloadHandler","nextTick","Promise","resolve","WebSocket","MozWebSocket","isReactNative","navigator","product","toLowerCase","shouldIncludeBinaryHeader","transports","websocket","forceBase64","name","check","protocols","headers","ws","addEventListeners","onopen","autoUnref","_socket","unref","onclose","closeEvent","onmessage","ev","onerror","lastPacket","timestampRequests","timestampParam","b64","webtransport","WebTransport","transport","transportOptions","closed","catch","ready","createBidirectionalStream","stream","reader","readable","getReader","binaryFlag","writer","getWriter","read","done","isBinary","TextDecoder","isPlainBinary","decodePacketFromBinary","handshake","sid","of","polling","location","isSSL","protocol","createCookieJar","poll","total","doPoll","encodedPayload","encodedPackets","decodedPacket","decodePayload","count","encodePayload","doWrite","request","assign","req","xhrStatus","pollXhr","re","parts","parse","src","b","replace","m","exec","source","host","authority","ipv6uri","pathNames","regx","names","queryKey","$0","$1","$2","Socket","writeBuffer","prevBufferLen","agent","upgrade","rememberUpgrade","addTrailingSlash","rejectUnauthorized","perMessageDeflate","threshold","closeOnBeforeunload","qs","qry","pairs","l","pair","decodeURIComponent","id","upgrades","pingInterval","pingTimeout","pingTimeoutTimer","beforeunloadEventListener","offlineEventListener","createTransport","EIO","priorWebsocketSuccess","shift","setTransport","onDrain","probe","failed","onTransportOpen","msg","upgrading","flush","freezeTransport","error","onTransportClose","onupgrade","to","onHandshake","JSON","resetPingTimeout","sendPacket","code","filterUpgrades","maxPayload","getWritablePackets","payloadSize","c","utf8Length","ceil","size","options","compress","cleanupAndClose","waitForUpgrade","filteredUpgrades","j","withNativeFile","File","hasBinary","toJSON","isArray","deconstructPacket","buffers","packetData","pack","_deconstructPacket","attachments","placeholder","_placeholder","newData","reconstructPacket","_reconstructPacket","RESERVED_EVENTS","PacketType","isObject","Decoder","reviver","add","reconstructor","decodeString","isBinaryEvent","BINARY_EVENT","BINARY_ACK","EVENT","ACK","BinaryReconstructor","takeBinaryData","start","buf","nsp","next","payload","tryParse","substr","isPayloadValid","static","CONNECT","DISCONNECT","CONNECT_ERROR","destroy","finishedReconstruction","reconPack","binData","replacer","encodeAsString","encodeAsBinary","stringify","deconstruction","unshift","freeze","connect","connect_error","disconnect","disconnecting","newListener","io","connected","recovered","receiveBuffer","sendBuffer","_queue","_queueSeq","ids","acks","flags","auth","_opts","_autoConnect","disconnected","subEvents","subs","onpacket","active","_readyState","retries","fromQueue","volatile","_addToQueue","ack","pop","_registerAckCallback","isTransportWritable","engine","notifyOutgoingListeners","ackTimeout","timer","emitWithAck","withErr","reject","arg1","arg2","tryCount","pending","responseArgs","_drainQueue","force","_packet","_sendConnectPacket","_pid","pid","offset","_lastOffset","onconnect","onevent","onack","ondisconnect","message","emitEvent","_anyListeners","listener","sent","emitBuffered","subDestroy","onAny","prependAny","offAny","listenersAny","onAnyOutgoing","_anyOutgoingListeners","prependAnyOutgoing","offAnyOutgoing","listenersAnyOutgoing","Backoff","ms","min","max","factor","jitter","attempts","duration","pow","rand","random","deviation","reset","setMin","setMax","setJitter","Manager","nsps","reconnection","reconnectionAttempts","Infinity","reconnectionDelay","reconnectionDelayMax","randomizationFactor","backoff","_parser","parser","encoder","Encoder","decoder","autoConnect","v","_reconnection","_reconnectionAttempts","_reconnectionDelay","_randomizationFactor","_reconnectionDelayMax","_timeout","maybeReconnectOnOpen","_reconnecting","reconnect","Engine","skipReconnect","openSubDestroy","errorSub","onping","ondata","ondecoded","_destroy","_close","delay","onreconnect","attempt","cache","parsed","loc","test","href","url","sameNamespace","forceNew","multiplex"],"mappings":"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"}